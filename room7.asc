// room script file

int wasHere = 0;

int loadPos;
bool abiUp = false;
bool paulUp = false;


function setCharUp()
{
  if(IsPlayerAbi)
    {
      abiUp = true;
    } else {
      paulUp = true;
    }
  player.Baseline = 163;
}

function setCameraPos()
{
  if(player.PreviousRoom == 1)
  {
    if(player.x < 333)
    {
      Game.Camera.SetSize(288, 160);      
      Game.Camera.X = 160;
      Game.Camera.Y = 26;    
      loadPos = 1;
    } else {      
      loadPos = 2;
      Game.Camera.SetSize(288, 160);      
      Game.Camera.X = 245;
      Game.Camera.Y = 20;  
      setCharUp();
    }    
  }
}


function goToMap()
{
  SetNextScreenTransition(eTransitionInstant);
  Find.findScreenPosMap();
  player.ChangeRoom(eRooms_MapRoom, 420, 145);  
}


function roomChange(int room)
{
  switch(room)
  {
    case eRooms_FlatHallway:
      if(player.x < 333)
      {       
          Game.Camera.TweenSize(0.3, 36, 20, eEaseInOutSineTween, eNoBlockTween);          
          Game.Camera.TweenPosition(0.3, 236, 115, eEaseInOutSineTween, eBlockTween); 
          Game.Camera.TweenPosition(0.1, 236, 115, eEaseInOutSineTween, eBlockTween); 
          SetNextScreenTransition(eTransitionCrossfade);          
          player.ChangeRoom(eRooms_FlatHallway, player.x - 10, player.y + 127);
      } else {
          Game.Camera.TweenPosition(0.3, 372, 113, eEaseInOutSineTween, eNoBlockTween);
          Game.Camera.TweenSize(0.3, 2, 1, eEaseInOutSineTween, eBlockTween);          
          SetNextScreenTransition(eTransitionCrossfade);
          player.Baseline = -1;
          allowSkipWalk = true;
          player.ChangeRoom(eRooms_FlatHallway, 669, 201, eDirectionLeft);
      }
    break;
    case eRooms_MapRoom:
      goToMap();
    break;
  }
}
/*
function setCameraPos()
{
  if(player.x < 349)
  {
    Game.Camera.X = 0;
  } else {
    Game.Camera.X = 300;
  }
}*/

function room_Load()
{   
  //panicReturn(137, 489);
  setCameraPos();
  changePlayerLocaleOnRoomEnter();
  Phone.adjustPhoneVolumeWhilstRinging();
  resumeMusicAfterCHCH(aOutside);
  
  if(characterChange){    
      
  } else {      
    if(player.PreviousRoom == eRooms_MapRoom)
    {
      beenToFlatHowManyTimes++;
     
      player.SetWalkSpeed(4, 3);
      gIconbar.Visible = true;
      gMapLabel.Visible = false;
      
      if(IsPlayerAbi){
      
      } else {
        paulJumper();
      }
      
    } else if (player.PreviousRoom == eRooms_FlatHallway)
    {
      
      playMusic(aOutside);
      
    }
  }
  player.PlaceOnWalkableArea();
  
}






function room_Leave()
{
  if(flyBuzz!=null)
  {
    if(flyBuzz.IsPlaying)
    {
      flyBuzz.Stop();
    }
  }
  if(dialTone!=null)
  {
    if(dialTone.IsPlaying)
    {
      dialTone.Stop();
    }
  }
  if(phoneRinging!=null)
  {
    if(phoneRinging.IsPlaying)
    {
      phoneRinging.Stop();
    }
  }
}

function tweenCamera(int position)
{
  wasHere = 0;
  if(position == 1)
  {
    player.Walk(player.x - 20, player.y);
    Game.Camera.TweenPosition(1.0, 0, 0, eEaseInOutSineTween, eNoBlockTween);
  } else {
     player.Walk(player.x + 20, player.y);
    Game.Camera.TweenPosition(1.0, 300, 0, eEaseInOutSineTween, eNoBlockTween);
  }
  if(Game.Camera.Width != 360)
    {
      Game.Camera.TweenSize(1.0, 360, 200, eEaseInOutSineTween);
    }
}

function region1_WalksOff()
{
  wasHere = 1;
}

function region1_WalksOnto()
{
  if(wasHere == 2)
  {
    tweenCamera(1);
    
  }
}

function region2_WalksOff()
{
  wasHere = 2;
}

function region2_WalksOnto()
{
  if(wasHere == 1)
  {
    tweenCamera(2);
    
  }
}

function room_AfterFadeIn()
{

    tweenCamera(loadPos);

}

function region3_WalksOnto()
{
  roomChange(eRooms_FlatHallway);
}

function stairs()
{
  if(IsPlayerAbi)
  {
    if(abiUp)
    {
      player.FaceDirection(eDirectionUpRight, eBlock);
     
      player.Walk(517, 124, eBlock, eAnywhere);
       
      player.FaceDirection(eDirectionUpRight, eBlock);
      player.Baseline = -1;
      player.LockView(player.NormalView, eKeepMoving);
      player.Animate(player.Loop, 4, eRepeat, eNoBlock, eForwards);
      
      
      player.TweenPosition(0.1, 517, 128,  eEaseLinearTween, eBlockTween);      
      player.TweenPosition(0.6, 531, 134, eEaseLinearTween, eBlockTween);      
   
      player.UnlockView(eStopMoving);
      player.Walk(541, 124, eBlock, eAnywhere);
      abiUp = false;
    } else {
      player.FaceDirection(eDirectionDownLeft, eBlock);
      player.Walk(532, 134, eBlock, eAnywhere);
      player.FaceDirection(eDirectionDownLeft, eBlock);
      player.LockView(player.NormalView, eKeepMoving);
      player.Animate(player.Loop, 4, eRepeat, eNoBlock, eForwards);      
      
      player.TweenPosition(0.6, 517, 128,  eEaseLinearTween, eBlockTween);  
      player.TweenPosition(0.1, 515, 124, eEaseLinearTween, eBlockTween);

      player.Baseline = 163;
      player.Walk(506, 132, eBlock, eAnywhere);
      
      player.UnlockView();
      abiUp = true;
    }
  } else {
    if(paulUp)
    {
      player.FaceDirection(eDirectionUpRight, eBlock);
     
      player.Walk(517, 124, eBlock, eAnywhere);
       
      player.FaceDirection(eDirectionUpRight, eBlock);
      player.Baseline = -1;
      player.LockView(player.NormalView, eKeepMoving);
      player.Animate(player.Loop, 4, eRepeat, eNoBlock, eForwards);
      
      
      player.TweenPosition(0.1, 517, 128,  eEaseLinearTween, eBlockTween);      
      player.TweenPosition(0.6, 531, 134, eEaseLinearTween, eBlockTween);      
   
      player.UnlockView(eStopMoving);
      player.Walk(541, 124, eBlock, eAnywhere);
      paulUp = false;
    } else {
      player.FaceDirection(eDirectionDownLeft, eBlock);
      player.Walk(532, 134, eBlock, eAnywhere);
      player.FaceDirection(eDirectionDownLeft, eBlock);
      player.LockView(player.NormalView, eKeepMoving);
      player.Animate(player.Loop, 4, eRepeat, eNoBlock, eForwards);      
      
      player.TweenPosition(0.6, 517, 128,  eEaseLinearTween, eBlockTween);  
      player.TweenPosition(0.1, 515, 124, eEaseLinearTween, eBlockTween);

      player.Baseline = 163;
      player.Walk(506, 132, eBlock, eAnywhere);
      
      player.UnlockView();
      paulUp = true;
    }
  }
}

function region4_WalksOnto()
{
  stairs();

}

function disableSkipWalk()
{
  if(player.InRect(472, 116, 549, 140))
  {       
    if(skippingWalking)
    {
      zSkipWalking();
    }
    if(allowSkipWalk)
    {
      allowSkipWalk = false;
    }
    
  } else {
    if(!allowSkipWalk)
    {
      allowSkipWalk = true;
    }
  }
}

function room_RepExec()
{
  disableSkipWalk();
  
}

function region5_WalksOnto()
{
  roomChange(eRooms_FlatHallway);
}
