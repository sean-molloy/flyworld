/*
int howMuchRain = 10;             //to make 10 raindrops at a time 
int rainDropLength = 20;          //each drop is 1 pixel wide, 20 pixels long
int splashTOP    = 112;
int splashLEFT   = 65;
int splashRIGHT  = 249;
int splashBOTTOM = 186;
int howManyDrops = 30;

bool isItRainingNow = true;

DynamicSprite *rainBackground;
DrawingSurface *rainDrawingSurface;

function makeItRain()
{
  if(isItRainingNow)
  {
    if(!IsGamePaused())
    {
      if(rainDrawingSurface != null)
      {
        rainDrawingSurface.Clear();
      } else {
        rainBackground = DynamicSprite.CreateFromExistingSprite(1234);
        rainDrawingSurface = rainBackground.GetDrawingSurface();
      }
        if(Game.DoOnceOnly("initRain")){
        SetTimerWithSeconds(13, 0.1);
      }
      if(IsTimerExpired(13))
      {
        for (int i = 0; i < howMuchRain; i++)
        {
          int coordX =  Game.Camera.X + 1 + Random(Game.Camera.Width - 2);
          int coordY =  Game.Camera.Y + 1 + Random(Game.Camera.Height - rainDropLength - 2);        
          rainDrop1 = DynamicSprite.CreateFromBackground(GetBackgroundFrame(), coordX, coordY, 1, rainDropLength);        
          rainDrop1.Tint(1, 1, 1, 30, 100);
          rainDrawingSurface.DrawImage(coordX, coordY-1, rainDrop1.Graphic);
        }
        
         for (int i = 0; i < howManyDrops; i++)
        {
          int coordX =  Game.Camera.X + 1 + Random(Game.Camera.Width - 2);
          int coordY =  Game.Camera.Y + 1 + splashTOP + Random(Game.Camera.Height - rainDropLength - 2 - splashTOP); 
          rainDrop1 = DynamicSprite.CreateFromBackground(GetBackgroundFrame(), coordX, coordY, 1, 1);        
          rainDrop1.Tint(1, 1, 1, 90, 100);
          rainDrawingSurface.DrawImage(coordX, coordY, rainDrop1.Graphic);
        }
        
        rainSurface = Overlay.CreateGraphical(0, 0, rainBackground.Graphic, true);
        
        SetTimerWithSeconds(13, 0.15);
      }   
    }
  }
}

function toggleRain()
{
  if(isItRainingNow)
  {
    isItRainingNow = false;
     rainSurface.Remove();
  } else {
    isItRainingNow = true;
  }
  
}

function late_repeatedly_execute_always()
{
  makeItRain();
}
*/