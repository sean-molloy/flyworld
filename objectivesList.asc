// new module script


function displayAlert(alertType theAlert, bool autoHide)
{
  //create a series of icons for this, just change the image, make the fade in tween wonkier
  if(showAlerts)
  {  
    switch (theAlert)
    {
      case eAlertPhoneCall:
      
        gAlert.X = 318;
        gAlert.Y = 163;
        alertIcon.Animate(98, 0, 1, eRepeat);
      break;
      case eAlertObjective:
        
        aObjective.Play(eAudioPriorityHigh, eOnce);
        //replace this with some sonic the hedgehog sound
        //some confusion about room coordinates vs screen coordinates!
        gAlert.X =  player.x - 17 - Game.Camera.X;
        gAlert.Y = player.y - 70 - Game.Camera.Y ;
        alertIcon.Animate(79, 0, 4, eRepeat);
        gAlert.TweenPosition(1.0, gAlert.X, gAlert.Y - 30, eEaseOutCubicTween, eNoBlockTween);
      break;
    }
    gAlert.Visible = true;
    gAlert.Transparency = 100;
    gAlert.TweenTransparency(0.8, 30, eEaseOutSineTween, eNoBlockTween);
    if(autoHide)
    {
      gAlert.TweenTransparency(0.2, 100, eEaseOutSineTween, eNoBlockTween, 1.8);
      
    }
  }
}

function hideAlert()
{
  gAlert.Visible = false;
  
}


/*********************************Objectives**************************************************/

function openObjectives()
{
  //put an if else in here to open either abi or pauls to do list
   // IsGuiOnScreen = true;
    gIconbar.Visible = false;
    gHintBar.Visible = false;
    gHealth.Visible = false;
    gObjectives.Visible = true;
      SetTimer(1, 1000);
  
}

function closeObjectives()
{
  if(gObjectives.Visible)
  {
   // IsGuiOnScreen = false;
    gIconbar.Visible = true;
    gHintBar.Visible = true;
    gObjectives.Visible = false; 
  }
}

function addObjective(String text)
{
  displayAlert(eAlertObjective, true);
  lObjectives.AddItem(text); 
}

function removeObjective(String text)
{
  int itemIndex = 0;
  while (itemIndex < lObjectives.ItemCount)
  {
    if(lObjectives.Items[itemIndex] == text)
    {
      lObjectives.RemoveItem(itemIndex);
    }
    itemIndex++;
  }
  
}