/**
don't worry about lihting when opening the curtains at daytime
it can be a comedic moment
abi: Let's let some light in here.
(opens curtains)
abi: Huh. 
abi: practically no light is coming in.
paul: (sigh) even the sun hates me.
*/

//*********STATE**************//

enum stateType{
  eStateLightsOnDoorOpen = 0, 
  eStateLightsOffDoorOpen = 1, 
  eStateLightsOffDoorClosed = 2, 
  eStateLightsOnDoorClosed = 3
};
int currentState = eStateLightsOffDoorOpen;

function setState(int stateNum)
{
  currentState = stateNum;
  switch(stateNum)
  {

    case eStateLightsOnDoorOpen:
   
      SetBackgroundFrame(0);
      oTypewriter.RemoveTint();
      oCurtains.RemoveTint();
      region[3].Tint(0, 0, 0, 0, 0);   
   
      
    hLamp.SetTextProperty("defaultVerb","turn off");
    hLamp.SetTextProperty("useVerb","turn off");
    
    hExit.SetTextProperty("moveVerb", "close");
    hExit.SetTextProperty("defaultVerb", "close");
    
    
  
    RemoveWalkableArea(3);
    cNPCPaul.Loop = 0;
    oMatress.SetView(41, 1, 1);
    player.RemoveTint();
    if(cOtherCharacter.Room == eRooms_PaulsRoom)
    {
      cOtherCharacter.RemoveTint();
    }
    RestoreWalkableArea(4);
    oPaulDoorOpen.Graphic = 3841;
    break;
    
    
    
    
    
    case eStateLightsOffDoorOpen:
    
    
      SetBackgroundFrame(1);            
      region[3].Tint(0, 10, 250, 60, 50);    
      
      oTypewriter.Tint(0, 10, 250, 80, 50);
      oCurtains.Tint(0, 10, 250, 80, 50);
      
      hLamp.SetTextProperty("defaultVerb","turn on");
      hLamp.SetTextProperty("useVerb","turn on");
    
    if(cOtherCharacter.Room == eRooms_PaulsRoom)
      {
        cOtherCharacter.RemoveTint();
      }
        hExit.SetTextProperty("moveVerb", "close");
      hExit.SetTextProperty("defaultVerb", "close");
        
      RemoveWalkableArea(3);
      cNPCPaul.Loop = 1;
      oMatress.SetView(41, 1, 0);
      player.RemoveTint();
      RestoreWalkableArea(4);
      oPaulDoorOpen.Graphic = 3827;
    break;
    
    
    
    case eStateLightsOffDoorClosed:
     
      SetBackgroundFrame(2);
     
      hLamp.SetTextProperty("defaultVerb","turn on");
      hLamp.SetTextProperty("useVerb","turn on");
      
      region[3].LightLevel = 0;
   
      oTypewriter.Tint(0, 10, 250, 80, 50);
      oCurtains.Tint(0, 10, 250, 80, 50);
      player.Tint(0, 10, 250, 80, 50);
      if(cOtherCharacter.Room == eRooms_PaulsRoom)
      {
        cOtherCharacter.Tint(0, 10, 250, 80, 50);
      }
      hExit.SetTextProperty("moveVerb", "open");
      hExit.SetTextProperty("defaultVerb", "open");
      
  
      cNPCPaul.Loop = 2;      
      oMatress.SetView(41, 1, 2);
      RestoreWalkableArea(3);
      RemoveWalkableArea(4);
      oDoorClosed.Graphic = 3826;
    break;
    
    
    
    case eStateLightsOnDoorClosed:
     
      SetBackgroundFrame(0);
    
      
      oTypewriter.RemoveTint();
      oCurtains.RemoveTint();
      region[3].Tint(0, 0, 0, 0, 0);   
    
      
      hLamp.SetTextProperty("defaultVerb","turn off");
      hLamp.SetTextProperty("useVerb","turn off");
    
      hExit.SetTextProperty("moveVerb", "open");
      hExit.SetTextProperty("defaultVerb", "open");
      
  
      
      cNPCPaul.Loop = 0;
      oMatress.SetView(41, 1, 1);
      player.RemoveTint();
      if(cOtherCharacter.Room == eRooms_PaulsRoom)
      {
        cOtherCharacter.RemoveTint();
      }
      RemoveWalkableArea(4);
      RestoreWalkableArea(3);
      oDoorClosed.Graphic = 3840;
    break;
  }
}

/*********************PAULS BEDROOM***************************************START UP*****************************************/

function moveOtherCharIntoPaulsRoomIfInDoorway()
{
  if(cOtherCharacter.Room == eRooms_FlatHallway)
  {
    if(Find.inRect(581, 187, 663, 222, true))
    {
      cOtherCharacter.ChangeRoom(eRooms_PaulsRoom);
    }
  }
}

function putOtherCharBackInKitchen()
{
  if(cOtherCharacter.Room == eRooms_FlatHallway)
  {
    if(cOtherCharacter.PreviousRoom == eRooms_FlatKitchen &&
    cOtherCharacter.y < 184)
    {
      cOtherCharacter.ChangeRoom(eRooms_FlatKitchen);
    }
  }
}

function putOtherCharBackInLounge()
{
  if(cOtherCharacter.Room == eRooms_FlatHallway)
  {
    if(cOtherCharacter.PreviousRoom == eRooms_FlatLounge &&
    cOtherCharacter.y < 184)
    {
      cOtherCharacter.ChangeRoom(eRooms_FlatLounge);
    }
  }
}

function setUpBed()
{
  
    //  oMatress.SetView(42, 2,0);
  
}



function room_Load()
{ 

  playerLeftie();
RemoveWalkableArea(2);
  changePlayerLocaleOnRoomEnter();
  resumeMusicAfterCHCH(aFlat_theme);
  if(Game.DoOnceOnly("setUpPaulsRoom")){
    oCurtains.SetView(39);
    paulBedDark();
  }
  if(cutScenes[4]<3){
    RemoveWalkableArea(2);
  }
 
  if(characterChange == false && player.PreviousRoom == eRooms_FlatHallway)
  {
    oDoorClosed.Visible = false;
    oPaulDoorOpen.Visible = true;
    if(currentState == eStateLightsOffDoorClosed)
    {
      setState(eStateLightsOffDoorOpen);
    } else if (currentState == eStateLightsOnDoorClosed)
    {
      setState(eStateLightsOnDoorOpen);
    } else {
    setState(currentState);  
      }
  } else {
    setState(currentState);
  }
 
  
  Phone.adjustPhoneVolumeWhilstRinging();
  if(characterChange)
  {    
    Game.Camera.SetAt(400, 95);            
  } else {
    if(player.PreviousRoom == eCSR_paulCloseUp)
    {
      Game.Camera.SetAt(400, 95);   
      playMusic(aFlat_theme);
    } else {
      Game.Camera.SetAt(HandyHelper.recallCamX(), HandyHelper.recallCamY());
    }
  }
      
  moveOtherCharIntoPaulsRoomIfInDoorway();  
  putOtherCharBackInKitchen();
  putOtherCharBackInLounge();
  
  
  if(followed){
    cGhostl.ChangeRoom(eRooms_SpookyZone);   
  } else {
    seeGhost();
  }
  Follow.followStand(195, 147);
  Follow.followFrom(177,  106, 2);
  player.PlaceOnWalkableArea();
}

function room_AfterFadeIn()
{
  Follow.followMe(3); 
   if(characterChange)
  {
    flashPlayer();
    characterChange = false; 
  } else {
    if(player.PreviousRoom == eCSR_paulCloseUp)
    { 
      mouse.Mode = eModeWalkto;
    } else {
      Game.Camera.TweenPosition(1.0,  400,  95,  eEaseInOutSineTween, eNoBlockTween);   
    }
  }
  player.PlaceOnWalkableArea();
}
/******************************REGIONS*************************************REGIONS************************/


function region1_WalksOnto()
{
//  int remX = player.x + 400;
  //int remY = player.y + 95;
  HandyHelper.memorizeCamPos();
  Game.Camera.StopAllTweens();
  player.ChangeRoom(eRooms_FlatHallway, player.x, player.y);
}

function region2_Standing()
{
  player.z = 3;
}

function region2_WalksOff()
{
  player.z = 0;
}
function region4_WalksOff()
{
player.z = 0;
}
function region4_WalksOnto()
{
  player.z = 3;
}

/*******************************INTERACTION*******************************************INTERACTION****************************/

function pickupTypewriter()
{ 
  cPaul.Walk(677, 236, eBlock);
  cPaul.FaceDirection(eDirectionUpLeft, eBlock);
  cPaul.Say("Okay, I'll pick up the typewriter. Animate this eventually!");
  oTypewriter.Visible = false;
  cPaul.AddInventory(iTypewriter);   
}
function toggleLamp()
{
  if(!getOutOfTheWay(603, 233))
  {
    player.Walk(603, 233, eBlock, eWalkableAreas);
    
  }
  
  aClick1.Play(eAudioPriorityNormal);
  player.FaceDirection(eDirectionUpLeft, eBlock);
  
  switch(currentState)
  {
    case eStateLightsOffDoorOpen:
      setState(eStateLightsOnDoorOpen);
      
    break;
    case eStateLightsOffDoorClosed:
      setState(eStateLightsOnDoorClosed);
      
    break;
    case eStateLightsOnDoorOpen:
      setState(eStateLightsOffDoorOpen);
      
    break;
    case eStateLightsOnDoorClosed:
      setState(eStateLightsOffDoorClosed);
      
    break;
    
  }
      
}

function toggleCurtains()
{     
  if(oCurtains.Frame==0)
  {
    if(getOutOfTheWay(714, 260))
    {
    
                
    } else{
      player.Walk(714, 260, eBlock);
    }
    player.FaceDirection(eDirectionRight, eBlock);
    oCurtains.Animate(0, 0, eOnce, eNoBlock, eForwards);  
  } else {  
    getOutOfTheWay(690, 240);
    
  // player.Walk(290, 145, eBlock);
    player.FaceDirection(eDirectionRight, eBlock);
    oCurtains.Animate(0, 0, eOnce, eNoBlock, eBackwards);
  }
    oCurtains.toggleStatusOpenShut();
    oCurtains.toggleVerbOpenShut();  
}

/************************OBJECTS*******************************************OBJECTS*****************************************/

function takeTypewriter()
{
       if(IsPlayerAbi)
      {
        cAbi.Say("No way, I'm not stealing Paul's stuff.");
        if(cPaul.Room==eRooms_PaulsRoom)
        {
          cPaul.angry();          
          cPaul.Say("Thanks...");
          cPaul.cool();
        }
      } else {
        pickupTypewriter();               
      } 
}

function oTypewriter_AnyClick()
{
  switch (verbUsed)
  {
    case 0: //walk
      walkToAndFace(682, 236, eDirectionUp, 661, 239);          
    break;
    case 1://look
      player.FaceLocation(670, 225, eBlock);
      lookAbiPaul("It's Paul's typewriter.", 
                  "It's my typewriter.");
    break;
    case 2://use
      cPaul.angry();
      lookAbiPaul("Paul will have a hissy-fit if I touch his precious typewriter.",
                  "Nah I need some paper...And some ideas.");    
      cPaul.cool();
    break;
    case 3://talk
      Canned.noTalking();
    break;
    case 4://move
      lookAbiPaul("I'm not messing with Paul's typewriter,",
                  "If I'm going to lift it, I may as well take it with me.");
      if(!IsPlayerAbi)
      {
        pickupTypewriter();
      } else {
        player.Say("it's his prized possession.");
      }
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
      takeTypewriter();
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;
}

function oCurtains_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    if(oCurtains.Frame==0)
    {
      walkToAndFace(714, 260, eDirectionRight, 705, 247);           
    } else {
      walkToAndFace(690, 240, eDirectionRight, 705, 247);     
    }
  break;
  case 1://look
    player.FaceDirection(eDirectionRight, eBlock);
    lookAbiPaul("Whoever decorated this house was a fan of the EGA palette.", 
                "Classic curtains.");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    toggleCurtains();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;

}


//************************HOTSPOTS***********************************************HOTSPOTS***********************************/

function hLamp_AnyClick()
{
  switch (verbUsed)
  {
    case 0: //walk
      walkToAndFace(603, 233, eDirectionLeft, 615, 234);
      
     // player.Walk(203, 138);
    break;
    case 1://look
      player.FaceLocation(188, 126, eBlock);
      lookAbiPaul("Pretty shabby lamp.", "This lamp cost me $10 on Trademe!");
    break;
    case 2://use
      toggleLamp();            
    break;
    case 3://talk
      Canned.noTalking();
    break;
    case 4://move
      Canned.noMoving();
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
      cPaul.angry();
      lookAbiPaul("Nah I better not mess with Paul's lamp.","No way, the lamp stays!");  
      cPaul.cool();
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;
}

function hPaulsDesk_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    player.Walk(276, 141);
  break;
  case 1://look
    lookAbiPaul("It's one of those plastic school desk from the 90's.", 
                "My cozy little writer's nook.");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    if(oTypewriter.Visible)
    {
      lookAbiPaul("If I open that desk the typewriter will topple over on the floor!",
                  "Not with the typewriter on it!");
    } else {
      lookAbiPaul("I'm not rummaging through Paul's private stuff...I might see something I'll wish I hadn't.",
                  "Maybe someday I will open that desk. Who knows what secrets are within.");
                  //note there should be some rad drawings to give to the tattooist//
    }    
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    if(player.ActiveInventory == iTypewriter)
    {
      oTypewriter.Visible = true;
      player.LoseInventory(iTypewriter);
    } else {
      Canned.wontWork();
    }
  break;
}
verbUsed = 0;

}

function hPosterClown_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    player.Walk(176, 134);
  break;
  case 1://look
  player.FaceLocation(166, 121);
    lookAbiPaul("Sam and the Santown Ghost Clowns.", "Sam and the Santown Ghosts.");
    if(IsPlayerAbi && cPaul.Room == eRooms_PaulsRoom)
    {
      cAbi.FaceCharacter(cPaul);
      cPaul.Say("Great band. Very colourful.");
    }
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function hPosterButs_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    player.Walk(176, 134);
  break;
  case 1://look
  
    player.FaceLocation(166, 121);
    lookAbiPaul("The Buts.", "The Buts.");
     if(IsPlayerAbi && cPaul.Room == eRooms_PaulsRoom)
    {
      cPaul.angry();
      
      cPaul.Say("Those guys are dicks,");
      cPaul.FaceCharacter(cAbi);
      cAbi.FaceCharacter(cPaul);
      cPaul.cool();
      cPaul.Say("But they're so good!");
      cAbi.Say("Sounds like a bunch of good dicks.");
    }
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function hPosterFace_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    player.Walk(306, 156);
  break;
  case 1://look
    player.FaceLocation(342, 160, eBlock);
    lookAbiPaul("David Bain and the Everystreets.", "David Bain and the Everystreets.");
     if(IsPlayerAbi && cPaul.Room == eRooms_PaulsRoom)
    {
      cPaul.Say("I know the bassist!");
      cAbi.FaceCharacter(cPaul);
      WaitMouseKey(25);
      cAbi.awkward();
      cAbi.Say("Cool...");
      cAbi.cool();
    }
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function otherTween()
{
  if(cOtherCharacter.Room == eRooms_PaulsRoom )
  {
    if(Region.GetAtRoomXY(cOtherCharacter.x, cOtherCharacter.y) != region[3] &&
    cOtherCharacter.y > 213)
    {
     // cOtherCharacter.Walk(598, 239, eBlock, eWalkableAreas);
     // cOtherCharacter.FaceCharacter(player);
     cOtherCharacter.Baseline = 291;
     if(cOtherCharacter.TintBlue == 250)
     {
       cOtherCharacter.TweenTint(0.6, 0, 0, 0, 0, 0, eEaseLinearTween, eNoBlockTween);
     } else {
      cOtherCharacter.TweenTint(0.6, 0, 10, 250, 60, 50, eEaseLinearTween, eNoBlockTween);
     }
    }
  }
}

function otherNoTween()
{
   if(cOtherCharacter.Room == eRooms_PaulsRoom )
  {
    if(Region.GetAtRoomXY(cOtherCharacter.x, cOtherCharacter.y) != region[3] &&
    cOtherCharacter.y > 213)
    {  
     cOtherCharacter.Baseline = 291;     
    }
  }
}

function sendAwayOther()
{
  if(cOtherCharacter.Room == eRooms_PaulsRoom && cOtherCharacter.y <= 218)
  {
    cOtherCharacter.ChangeRoom(eRooms_FlatHallway);
  }
}


function animateDoorClose()
{
  
  
  player.Baseline = 296;
  if(player == cAbi)
  {
    player.LockView(237);
    player.Animate(0, 3, eOnce, eBlock, eForwards, 0);
    player.Animate(1, 3, eOnce, eNoBlock, eForwards, 0);
  }
  oPaulDoorOpen.Visible = false;
  doorCloseSFX();
  if(currentState == eStateLightsOffDoorOpen)
  {
    player.TweenTint(0.3, 0, 10, 250, 60, 50, eEaseLinearTween, eNoBlockTween);
    cNPCPaul.LockView(41);
    cNPCPaul.Loop = 2;
    cNPCPaul.Baseline = 292;
    cNPCPaul.Animate(2, 2, eOnce, eNoBlock, eForwards, 0);
    
    oCloseAnimation.SetView(41, 0, 0);
    oCloseAnimation.Visible = true;
    oCloseAnimation.Animate(0, 2, eOnce, eBlock, eForwards);
    oCloseAnimation.Visible = false;
    player.RemoveTint();
    cNPCPaul.UnlockView();
    cNPCPaul.Loop = 2;
  } else  {
    
    oCloseAnimation.SetView(41, 3, 0);
    oCloseAnimation.Visible = true;
    oCloseAnimation.Animate(3, 2, eOnce, eBlock, eForwards);
    oCloseAnimation.Visible = false;
    
  }
    oDoorClosed.Visible = true;
    player.UnlockView(eStopMoving);
    player.Loop = eDirectionUp;
    
    player.Baseline = 0;
}

function animateDoorOpen()
{
  doorOpenSFX();
  oDoorClosed.Visible = false;
  player.Baseline = 296;
  
  
  if(currentState == eStateLightsOffDoorOpen)
  {
    
    oCloseAnimation.SetView(41, 0, 5);
    oCloseAnimation.Visible = true;
    player.Tint(0, 10, 250, 60, 50);
    cNPCPaul.LockView(41);
    cNPCPaul.Loop = 2;
    cNPCPaul.Baseline = 292;
    cNPCPaul.Frame = 5;
    
    if(player == cAbi)
    {
      player.LockView(237);
      player.Animate(2, 3, eOnce, eBlock, eForwards, 0);
      player.Animate(3, 2, eOnce, eNoBlock, eForwards, 0);
    }
    
    player.TweenTint(0.1, 0, 0, 0, 0, 0, eEaseLinearTween, eNoBlockTween);
    
 
    
    cNPCPaul.Animate(2, 2, eOnce, eNoBlock, eBackwards, 7);
  
    oCloseAnimation.Animate(0, 2, eOnce, eBlock, eBackwards);  
    oCloseAnimation.Visible = false;
 
    cNPCPaul.UnlockView();
    cNPCPaul.Loop = 1;
   // player.StopAllTweens(eFinishTween);
    player.RemoveTint();
  } else {
    oCloseAnimation.SetView(41, 3, 5);
    oCloseAnimation.Visible = true;
    
    if(player == cAbi)
    {
      player.LockView(237);
      player.Animate(2, 3, eOnce, eBlock, eForwards, 0);
      player.Animate(3, 2, eOnce, eNoBlock, eForwards, 0);
    }
    
    oCloseAnimation.Animate(3, 2, eOnce, eBlock, eBackwards);  
    oCloseAnimation.Visible = false;

  }
  
 
  oPaulDoorOpen.Visible = true;
  WaitSeconds(0.3);
   player.UnlockView(eStopMoving);
  player.Loop = eDirectionUp;
  player.Baseline = 0;
}

int doorXX = 624;
int doorYY = 235;
function walkToCloseTheDoor()
{
  player.Walk(doorXX, doorYY, eBlock, eWalkableAreas);
  player.FaceDirection(eDirectionUp);
  //player.Walk(652, 233, eBlock, eWalkableAreas);
  //player.FaceDirection(eDirectionLeft);
}

function walktoOpenTheDoor()
{
  player.Walk(doorXX, doorYY, eBlock, eWalkableAreas);
  player.FaceDirection(eDirectionUp);
}

function openCloseDoor()
{
 
  switch(currentState)
  {
    case eStateLightsOffDoorOpen:
      walkToCloseTheDoor();
      otherTween();
      animateDoorClose();
      setState(eStateLightsOffDoorClosed);
      sendAwayOther();
    break;
    case eStateLightsOnDoorOpen:
      walkToCloseTheDoor();
      otherNoTween();
      animateDoorClose();
      setState(eStateLightsOnDoorClosed);
      sendAwayOther();
    break;     
    case eStateLightsOffDoorClosed:
      walktoOpenTheDoor();
      otherTween();
      setState(eStateLightsOffDoorOpen);
      animateDoorOpen();
      
    break;
    case eStateLightsOnDoorClosed:
      walktoOpenTheDoor();
      otherNoTween();
      setState(eStateLightsOnDoorOpen);
      animateDoorOpen();
    break;
  }
   if(cOtherCharacter.Baseline == 291)
   {
     cOtherCharacter.Baseline = 0;
   }


}


function hExit_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    if(currentState == eStateLightsOffDoorClosed ||
    currentState == eStateLightsOnDoorClosed)
    {
      walkToAndFace(624, 224, eDirectionUp, 630, 235);
    } else {
      player.GoTo(624, 203);
    }
  break;
  case 1://look
     if(currentState == eStateLightsOffDoorClosed ||
    currentState == eStateLightsOnDoorClosed)
    {
      lookAbiPaul("It's Paul's door.", "The door's closed.");
    } else {
      lookAbiPaul("That way back to the hall.", "Out to the world.");
    }
    
    
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    
    openCloseDoor();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;

}

function room_Leave()
{
  playerRightie();
  HandyHelper.memorizeCamPos();
}

function region1_Standing(Region *theRegion)
{
  region1_WalksOnto();
}

function room_FirstLoad()
{
  setUpBed();
//cAbi.ChangeRoom(4, 595, 238);
}

function oDoorClosed_AnyClick(Object *theObject, CursorMode mode)
{
  hExit_AnyClick();
}
