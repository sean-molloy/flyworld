// room script file

function setViewNum(Object* theObject, int num)
{
  theObject.SetView(27, 0, num);
}

//add a variable which increases 

int theHour;
int theMinute;
int alarmHour;
int alarmMinute;
int incrementAmount = 20;

function setAlarmDefault()
{
  theHour = Time.GetHour();
  theMinute = Time.GetMinute();
  alarmHour = theHour;
  alarmMinute = theMinute;
}

//function which splits ones and tens for each of these values. 
//can do with maths or string functions. surely maths would be easier/faster??

function splitNum(int theNum, bool trueOnes)
{
  int ones;
  int tens = 0;
  String numAsString = String.Format("%d", theNum);
 
  if(theNum < 10)
  {
    ones = theNum;
  } else {
    String Stens = numAsString.Substring(0, 1);
    String Sones = numAsString.Substring(1, 1);
    
    tens = Stens.AsInt;
    ones = Sones.AsInt;
  }
      
  if(trueOnes)
  {
    return ones;
  } else {
    return tens;
  }
}

function setViewsNums()
{
  int displayHour = alarmHour;

  if(alarmHour > 12)
  {
    displayHour -= 12;    
  } 
  if(alarmHour == 0)
  {
    displayHour = 12;
  }
  
  if(alarmHour >= 0 && alarmHour < 12)
  {
    oPm.Visible = false;
  } else {
    oPm.Visible = true;
  }
  
  setViewNum(oMinOnes, splitNum(alarmMinute, true));  
  setViewNum(oMinTens, splitNum(alarmMinute, false));
  setViewNum(oHourOnes, splitNum(displayHour, true));
  setViewNum(oHourTens, splitNum(displayHour, false));
 if(splitNum(displayHour, false) == 0)
  {
    oHourTens.Visible = false;
  } else {
    oHourTens.Visible = true;
  }    
}


function displayTime()
{
  int displayHour = theHour;

  if(theHour > 12)
  {
    displayHour -= 12;    
  } 
  if(alarmHour == 0)
  {
    displayHour = 12;
  }
  
  if(theHour >= 0 && theHour < 12)
  {
    oPm.Visible = false;
  } else {
    oPm.Visible = true;
  }
  
  setViewNum(oMinOnes, splitNum(theMinute, true));  
  setViewNum(oMinTens, splitNum(theMinute, false));
  setViewNum(oHourOnes, splitNum(displayHour, true));
  setViewNum(oHourTens, splitNum(displayHour, false));
 if(splitNum(displayHour, false) == 0)
  {
    oHourTens.Visible = false;
  } else {
    oHourTens.Visible = true;
  }    
}

function modeButton()
{
  switch(player.SCABS())
  {
    case 0:
     //free parking!
    break;
    case 1:
      //display label which says 'time'
      displayTime();
      player.SCABS(1);
    break;
    case 2:
      if(HandyHelper.roomDelay(2.0))
      {
        setViewsNums();
        //display label which says 'alarm'
        player.SCABS(0);
      }
    break;   
  }
}


function room_Load()
{
  player.SCABS(0);
  Time.FreezeTime();
  setAlarmDefault();
  setViewsNums(); 
}

function plus()
{
  if(alarmMinute < 59)
  {
    alarmMinute++;
  } else {
    alarmMinute = 0;
    if(alarmHour < 23)
    {
      alarmHour++;
    } else {
      alarmHour = 0;
    }
  }
  setViewsNums();
}

function minus()
{
  if(alarmMinute > 0)
  {
    alarmMinute--;
  } else {
    alarmMinute = 59;
    if(alarmHour > 0)
    {
      alarmHour--;
    } else {
      alarmHour = 23;
    }
  }
  setViewsNums();
}

int cycleCounter = 0;
bool speedUpDial()
{
  cycleCounter++;
  if(cycleCounter > incrementAmount)
  {
    incrementAmount--;
    cycleCounter = 0;
    return true;    
  }
  return false;
}

function leaveLabel()
{
  if(Hotspot.GetAtRoomXY(mouse.x, mouse.y) == hOutsideAlarm)
  {
    mouse.Visible = false;
    gMapLabel.X = mouse.x -56;
    gMapLabel.Y = mouse.y - 7;
    gMapLabel.Visible = true;
    if(IsPlayerAbi)
    {
      bMapLocation.Text = "Switch to Paul";
    } else {
      bMapLocation.Text = "Switch to Abi";
    }
  } else {
    mouse.Visible = true;
    gMapLabel.Visible = false;
  }
}

function holdButtonPlus()
{
  if(Object.GetAtScreenXY(mouse.x, mouse.y) == oPlusButton)
  {
    
    if(mouse.IsButtonDown(eMouseLeft))
    {
      if(speedUpDial())
      {
        plus();
      }
    } 
  }
}

function holdButtonMinus()
{
   if(Object.GetAtScreenXY(mouse.x, mouse.y) == oMinusButton)
  {
    if(mouse.IsButtonDown(eMouseLeft))
    {
      if(speedUpDial())
      {
        minus();
      }
    }
  }
}


function room_RepExec()
{
  modeButton();
  leaveLabel();
  holdButtonMinus();
  holdButtonPlus();
}

function room_Leave()
{
  player.SCABS(0);
  Time.FreezeTime(true);
  mouse.Visible = true;
  gMapLabel.Visible = false;
}

function oPlusButton_AnyClick()
{
  plus();
  incrementAmount = 20;
  cycleCounter = 0;
}

function oSetButton_AnyClick()
{
  Time.SkipToFutureTime(alarmHour, alarmMinute);
  player.ChangeRoom(player.PreviousRoom);
  //incrementAmount = 10;
}

function oMinusButton_AnyClick()
{
  minus();
  incrementAmount = 20;
  cycleCounter = 0;
}

function hOutsideAlarm_AnyClick()
{
  switchProtagonist();
}

function oModeButton_AnyClick()
{
  player.SCABS(1);
}
