// room script file

function setupCupboard(Object* cup)
{
  if(cup.GetProperty("isItOpen"))
  {
    if(cup.ID < 6)
    {
      cup.SetView(80, 0, 6);
    } else {
      cup.SetView(81, 0, 6);
    }
  } else {
    if(cup.ID < 6)
    {
      cup.SetView(80, 0, 0);
    } else {
      cup.SetView(81, 0, 0);
    }
  }
}

function setupCupboards()
{
  setupCupboard(oSRCup1);
  setupCupboard(oSRCup2);
  setupCupboard(oSRCup3);
  setupCupboard(oSRCup4);
  setupCupboard(oSRCup5);
  setupCupboard(oSRCup6);
  setupCupboard(oSRCup7);
  setupCupboard(oSRCup8);
  setupCupboard(oSRCup9);
  setupCupboard(oSRCup10);
}

function setupCake()
{
  oCake.SetView(106, 0, 0);
}

function removeSlice()
{
  if(oCake.Frame < 11)
  {
    oCake.SetView(106, 0, oCake.Frame + 1);
  }
}

function room_FirstLoad()
{
 setupCupboards();
 setupCake();
}


function room_Load()
{
 
  if(characterChange)
  {
    Game.Camera.SetAt(138, 0);
  } else {
    Game.Camera.SetAt(0, 0);
  }
   resumeMusicAfterCHCH(aEndlessOffice);
   changePlayerLocaleOnRoomEnter();
   player.PlaceOnWalkableArea();
}


function room_AfterFadeIn()
{
   if(characterChange)
  {
   characterChange = false;        
  } else {
    Game.Camera.TweenX(1.5, 138, eEaseInOutCubicTween, eNoBlockTween);
  }
}
function region1_WalksOnto()
{
  player.ChangeRoom(14, player.x + 224, player.y);
}

function openCupboard(Object* cup)
{
  cup.toggleStatusOpenShut();
  cup.toggleVerbOpenShut();
  if(cup.GetProperty("isItOpen"))
  {    
    cup.Animate(0, 1, eOnce, eBlock, eForwards);
  } else {    
    cup.Animate(0, 1, eOnce, eBlock, eBackwards);
  }
}

function cupBoardInteract(Object* cup)
{
int cupX = cup.GetProperty("XX");
int cupY = cup.GetProperty("YY");
switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(cupX, cupY, eDirectionUp, cupX + 5, cupY + 7); 
  break;
  case 1://look
    player.FaceLocation(cupX, cupY, eBlock);
    lookAbiPaul("", "");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(cup);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;

  
}


function oSRCup1_AnyClick(){    cupBoardInteract(oSRCup1);  }
function oSRCup2_AnyClick(){    cupBoardInteract(oSRCup2);  }
function oSRCup3_AnyClick(){    cupBoardInteract(oSRCup3);  }
function oSRCup4_AnyClick(){    cupBoardInteract(oSRCup4);  }
function oSRCup5_AnyClick(){    cupBoardInteract(oSRCup5);  }
function oSRCup6_AnyClick(){    cupBoardInteract(oSRCup6);  }
function oSRCup7_AnyClick(){    cupBoardInteract(oSRCup7);  }
function oSRCup8_AnyClick(){    cupBoardInteract(oSRCup8);  }
function oSRCup9_AnyClick(){    cupBoardInteract(oSRCup9);  }
function oSRCup10_AnyClick(){   cupBoardInteract(oSRCup10); }





function hExit_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk

    player.Walk(255, 169);
  break;
  case 1://look
    player.FaceLocation(255, 169,  eBlock);
    lookAbiPaul("That's the way out.", 
                "The exit to the corridor.");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    lookAbiPaul("Don't come in!",
                "Stay out, I'm in here!");
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCake_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(349, 142, eDirectionDown, 333, 135); 
    
    
  break;
  case 1://look
    walkToAndFace(349, 142, eDirectionDown, 333, 135, "It's a shitty supermarket cake.",
                                                      "It's a fancy as chocolate cake!");
    //lookAbiPaul("Pretty sad looking cake, but it's a nice gesture I guess.",
      //          "mmmm...");                                                        
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take        
    getOutOfTheWay(349, 142);    
    if(oCake.Frame < 11)
    {
      if(player.HasInventory(iCakeSlice))
      {
        lookAbiPaul("Nah I don't want to be greedy.","I already got one!");
      } else {
        player.AddInventory(iCakeSlice);
        displayAlert(eAlertInvPickup, false, iCakeSlice);      
        removeSlice();  
      }
    } else {
      lookAbiPaul("All gone.","Stink! There's no more cake.");
    }
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}
