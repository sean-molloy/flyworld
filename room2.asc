/****************************FLAT KITCHEN********************************************/



/**********************Cupboards and fridge****************************************************/

function setupOven()
{
  if(oOvenDoor.GetProperty("isItOpen"))
  {
    RemoveWalkableArea(4);
    oOvenDoor.SetView(60, 0, 6);
  } else {
    oOvenDoor.SetView(60, 0, 0);
  }
}

function handleWalkables()
{
  if(oOvenDoor.GetProperty("isItOpen"))
  {
    RemoveWalkableArea(4);
  }
}

function setupCupboards()
{
  
  if(oCupboard1.GetProperty("isItOpen"))
  {
    oCupboard1.SetView(57, 0, 5);
  } else
  {
    oCupboard1.SetView(57, 0, 0);
  }
  
    if(oCupboard2.GetProperty("isItOpen"))
  {
    oCupboard2.SetView(58, 0, 5);
  } else
  {
    oCupboard2.SetView(58, 0, 0);
  }
  
  
    if(oCupboard3.GetProperty("isItOpen"))
  {
    oCupboard3.SetView(59, 0, 7);
  } else
  {
    oCupboard3.SetView(59, 0, 0);
  }

  if(oCupboard4.GetProperty("isItOpen"))
  {
    oCupboard4.SetView(61, 0, 7);
  } else
  {
    oCupboard4.SetView(61, 0, 0);
  }
  if(oCupboard5.GetProperty("isItOpen"))
  {
    oCupboard5.SetView(62, 0, 7);
  } else
  {
    oCupboard5.SetView(62, 0, 0);
  }
  if(oCupboard6.GetProperty("isItOpen"))
  {
    oCupboard6.SetView(63, 0, 7);
  } else
  {
    oCupboard6.SetView(63, 0, 0);
  }
  if(oCupboard7.GetProperty("isItOpen"))
  {
    oCupboard7.SetView(64, 0, 7);
  } else
  {
    oCupboard7.SetView(64, 0, 0);
  }
  if(oCupboard8.GetProperty("isItOpen"))
  {
    oCupboard8.SetView(65, 0, 7);
  } else
  {
    oCupboard8.SetView(65, 0, 0);
  }
  if(oCupboard9.GetProperty("isItOpen"))
  {
    oCupboard9.SetView(66, 0, 7);
  } else
  {
    oCupboard9.SetView(66, 0, 0);
  }
}

function openOven()
{  
  oOvenDoor.toggleStatusOpenShut();
  oOvenDoor.toggleVerbOpenShut();
  if(!oOvenDoor.GetProperty("isItOpen"))
  {
    ovenDoorOpen = false;
    aOvenDoorOpen.Play(eAudioPriorityHigh, eOnce);
    oOvenDoor.Animate(0, 1, eOnce, eBlock, eBackwards);
    RestoreWalkableArea(4);
    oOvenDoor.Baseline = 12;    
  } else {
    ovenDoorOpen = true;
    RemoveWalkableArea(4);
    aOvenDoorOpen2.Play(eAudioPriorityHigh, eOnce);
    oOvenDoor.Animate(0, 1, eOnce, eBlock, eForwards);    
    oOvenDoor.Baseline = 141;
  }
}

function randomDrawerSound()
{
  switch(Random(1))
  {
    case 0:
      aDrawer.Play(eAudioPriorityHigh);
    break;
    case 1:
      aDrawer2.Play(eAudioPriorityHigh);
    break;
  }
}


function randomCupboardSound()
{
  switch(Random(1))
  {
    case 0:
      aCupboard.Play(eAudioPriorityHigh);
    break;
    case 1:
      aCupboard2.Play(eAudioPriorityHigh);
    break;
  }
}

function closeDrawer(Object* theDrawer)
{    
  if(theDrawer.GetProperty("isItOpen"))
  {
    randomDrawerSound();
    theDrawer.Animate(0, 1, eOnce, eNoBlock, eBackwards);
    theDrawer.toggleStatusOpenShut();
    theDrawer.toggleVerbOpenShut();
  }
}

function closeAllDrawers()
{
  closeDrawer(oDraw1);
  closeDrawer(oDraw2);
  closeDrawer(oDraw3);
}

function justCupboardOpening(Object* theCupboard)
{
  randomCupboardSound();
  if(theCupboard.GetProperty("IsItOpen"))
  {
    theCupboard.Animate(0, 1, eOnce, eBlock, eBackwards);
    theCupboard.toggleStatusOpenShut();
    theCupboard.toggleVerbOpenShut();       
  } else {
    if(theCupboard.Name == "oCupboard4")
    {
      closeAllDrawers();
    }
    theCupboard.Animate(0, 2, eOnce, eBlock, eForwards);
    theCupboard.toggleStatusOpenShut();
    theCupboard.toggleVerbOpenShut();   
  }
}

function openCupboard(Object* theCupboard,  int x,  int y, CharacterDirection theWay)
{
  int loop1 = theCupboard.GetProperty("openLoop");
  int loop2 = loop1 + 1;
  
  player.GoTo(x, y, eBlock);
  player.FaceDirection(theWay);
  LockViews(240, 240);
  player.Animate(loop1, 2, eOnce, eBlock);
  player.Animate(loop2, 2, eOnce, eNoBlock); 
    
  justCupboardOpening(theCupboard);
  
  player.UnlockView(eStopMoving);
  player.Loop = theWay; 
}

function setupFridge()
{  
  if(oFridge.GetProperty("isItOpen"))
  {
    oFridge.Baseline = 140;
    oFridge.SetView(52, 0, 1); 
    RemoveWalkableArea(2);
  } else {
    oFridge.Baseline = 12;
    oFridge.SetView(52, 0, 0);    
    RestoreWalkableArea(2);
  }
  if(oFreezer.GetProperty("isItOpen"))
   {
    oFreezer.Baseline = 141;
    oFreezer.SetView(53, 0, 1);
    RemoveWalkableArea(2);
  } else {
    oFreezer.Baseline = 13;
    oFreezer.SetView(53, 0, 0);    
    RestoreWalkableArea(2);
  }
}

function openFridge()
{
   oFridge.toggleStatusOpenShut();
   oFridge.toggleVerbOpenShut();
  if(!oFridge.GetProperty("isItOpen"))
  {
   // oFridge.Baseline = 12;    
    oFridge.Animate(0, 1, eOnce, eBlock, eBackwards);
    aFridgeclose.Play(eAudioPriorityHigh);          
    RestoreWalkableArea(2);
  } else {
  
    aFridge1.Play(eAudioPriorityHigh);
    oFridge.Animate(0, 1, eOnce, eBlock, eForwards);
   // oFridge.Baseline = 140;       
    RemoveWalkableArea(2);
  }
}

function openFreezer()
{
   oFreezer.toggleStatusOpenShut();
   oFreezer.toggleVerbOpenShut();
  // player.x = player.x+1;
  if(!oFreezer.GetProperty("isItOpen"))
  {    
  //closing it
   // oFreezer.Baseline = 10;
    LockViews(240, 240);
    player.Animate(10, 3, eOnce, eBlock, eForwards, 0);
    player.Animate(11, 2, eOnce, eNoBlock, eForwards, 0);
    oFreezer.Animate(0, 2, eOnce, eBlock, eBackwards);
    aFridgeclose.Play(eAudioPriorityHigh);     
    RestoreWalkableArea(2);
    player.UnlockView(eStopMoving);
    player.Loop = eDirectionUpRight;
  } else {
    
    //opening it
   // oFreezer.Baseline = 10;
    LockViews(240, 240);
    player.Animate(8, 3, eOnce, eBlock, eForwards, 0);
    player.Animate(9, 2, eOnce, eNoBlock, eForwards, 0);
    aFridge1.Play(eAudioPriorityHigh);    
    oFreezer.Animate(0, 2, eOnce, eBlock, eForwards);       
    RemoveWalkableArea(2);
    player.UnlockView(eStopMoving);
    player.Loop = eDirectionUpRight;
  } 
 // player.x = player.x + 1;
}

function setUpDrawer(Object* theDrawer)
{
  int viewNumber = 51 + theDrawer.ID;
  if(theDrawer.GetProperty("isItOpen"))
  {
    theDrawer.SetView(viewNumber, 0, 3);     
  } else {  
    theDrawer.SetView(viewNumber, 0, 0);   
  }
}

function setupDrawers()
{
  setUpDrawer(oDraw1);
  setUpDrawer(oDraw2);
  setUpDrawer(oDraw3);
}


function openDrawer(Object* theDrawer)
{
  
  player.Walk(645, 124, eBlock);
  player.FaceDirection(eDirectionUp, eBlock);
  LockViews(240, 240);
  int theLoop = theDrawer.GetProperty("openLoop");
  randomDrawerSound();
  if(theDrawer.GetProperty("isItOpen"))
  {
    player.Animate(theLoop, 2, eOnce, eNoBlock, eBackwards, 6);
    theDrawer.Animate(0, 2, eOnce, eBlock, eBackwards);
    theDrawer.toggleStatusOpenShut();
    theDrawer.toggleVerbOpenShut();
  } else {
    
    player.Animate(theLoop, 2, eOnce, eNoBlock, eForwards, 0);
    
    theDrawer.Animate(0, 2, eOnce, eBlock, eForwards);
    theDrawer.toggleStatusOpenShut();
    theDrawer.toggleVerbOpenShut();
    
    if(oCupboard4.GetProperty("isItOpen"))
    {
      justCupboardOpening(oCupboard4);
    }
    
  }
  player.UnlockView(eStopMoving);
  player.Loop = eDirectionUp;
}








/**********************************************************************************/

function region1_WalksOnto()
{ 
 Game.Camera.StopAllTweens();
  HandyHelper.memorizeCamPos();
 player.ChangeRoom(eRooms_FlatHallway);
 
}

function region2_WalksOnto()
{
  Game.Camera.StopAllTweens();
  HandyHelper.memorizeCamPos();
  player.ChangeRoom(eRooms_FlatLounge);
}



function room_FirstLoad()
{
  
  setupFridge();
  setupDrawers();
  setupCupboards();
  setupOven();
  
}

function moveOtherToKitchen()
{
  if(cOtherCharacter.Room == eRooms_FlatHallway)
  {
    if(Find.inRect(531, 117, 663, 185, true))
    {
      cOtherCharacter.ChangeRoom(eRooms_FlatKitchen);
    } else if (Find.inRect(340, 99, 586, 186, true))
    {
      cOtherCharacter.ChangeRoom(eRooms_FlatLounge);
    }
  } else if(cOtherCharacter.Room == eRooms_FlatLounge)
  {
    if(Find.inRect(520, 104, 574, 188, true))
    {
      cOtherCharacter.ChangeRoom(eRooms_FlatKitchen);
    }
  }
}

function room_Load()
{ 
  handleWalkables();
  changePlayerLocaleOnRoomEnter();
  Phone.adjustPhoneVolumeWhilstRinging();
  resumeMusicAfterCHCH(aFlat_theme);
  moveOtherToKitchen();
  if(followed)
  { cGhostl.ChangeRoom(eRooms_SpookyZone);
  } else {
    seeGhost();
  }
  Follow.followStand(676, 151);
  int otherPlayer = Find.whichRoomIsOtherOne();
  if(otherPlayer == 3)
  {
    Follow.followFrom(522,  171, 2);
  } else {
    Follow.followFrom(580,  191, 3);
  }
  
  if(characterChange){
    if(cOtherCharacter.Room == eRooms_FlatLounge || cOtherCharacter.Room == eRooms_FlatKitchen)
    {
      Game.Camera.SetAt(HandyHelper.recallCamX(), HandyHelper.recallCamY());  
      } else {
      Game.Camera.SetAt(406,  0);    
    }
    } else {
      Game.Camera.SetAt(HandyHelper.recallCamX(), HandyHelper.recallCamY());          
    }
    player.PlaceOnWalkableArea();
}
function room_AfterFadeIn()
{
  if(characterChange)
  {
    
    if(Game.Camera.X != 406 )
    {
      Game.Camera.TweenPosition(1.5,  406,  0,  eEaseInOutSineTween, eNoBlockTween); 
    }
    flashPlayer();
    characterChange = false;
  } else {        
    Game.Camera.TweenPosition(1.5,  406,  0,  eEaseInOutSineTween, eNoBlockTween); 
  }
  Follow.followMe(3);
}
function hHotspot1_Look()
{
  player.Say("It's the fridge!");
}

function hHallExit_AnyClick()
{
  switch (verbUsed)
  {
    case 0: //walk
      player.GoTo(579, 194);
    break;
    case 1://look
      lookAbiPaul("That way to the hall!", "The hall is through there.");
    break;
    case 2://use
      Canned.noUsing();
    break;
    case 3://talk
      lookAbiPaul("Oi! Anyone out there?", "Who's there!?");
    break;
    case 4://move
      Canned.noMoving();
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
      Canned.cantTake();
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;
}

function hLoungeExit_AnyClick()
{
  switch (verbUsed)
  {
    case 0: //walk
      player.GoTo(523, 170);
    break;
    case 1://look
      lookAbiPaul("That way to the lounge!", "The living room is through there.");
    break;
    case 2://use
      Canned.noUsing();
    break;
    case 3://talk
      lookAbiPaul("Oi! Anyone in there?", "Who's there!?");
    break;
    case 4://move
      Canned.noMoving();
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
      Canned.cantTake();
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;
}

function hTapKnobs_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    player.Walk(656, 125);
    walkToAndFace(656, 125, eDirectionUp, 666, 135);
  break;
  case 1://look
    player.FaceLocation(656, 100, eBlock);
    lookAbiPaul("It's the kitchen sink.", "These knobs occilate the flow of water through the tap.");
  break;
  case 2://use
    player.Say("cant wait till these taps work!");
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
 
}

function hOvenKnobs_AnyClick()
{
  switch(verbUsed)
  {
  case 0: //walk
    player.Walk(609, 147);
  break;
  case 1://look
    lookAbiPaul("The knobs for the stove.", 
                "These knobs occilate the flow of gas through the stovetop.");
  break;
  case 2://use
    player.Say("cant wait till these knobs work!");
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function hExtractorFan_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    player.Walk(609, 146);
  break;
  case 1://look
    lookAbiPaul("It's the cooking fan.", 
                "This 'extractor fan' doesn't really extract anywhere.");
  break;
  case 2://use
    player.Say("turn on the fan");
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}

}

bool sinkOn = false;
function toggleSink()
{
  if( getOutOfTheWay(656, 125))
  {
    
  } else {
    player.GoTo(656, 125, eBlock, eWalkableAreas);
  }
  
  player.FaceDirection(eDirectionUp, eBlock);
  LockViews(240, 240);
  player.Animate(7, 2, eOnce, eBlock, eForwards, 0);
  if(sinkOn)
  {
    aTapFlatOff.Play(eAudioPriorityHigh, eOnce);
    oWater.StopAnimating();
    oWater.Visible = false;
    oWater.Transparency = 0;
     hSink.SetTextProperty("defaultVerb", "turn on");
    hSink.SetTextProperty("useVerb", "turn on");
    sinkOn = false;
  } else {
 aTapFlatOn.Play(eAudioPriorityHigh, eOnce);
  oWater.SetView(195, 0, 0);
  oWater.Visible = true;
  oWater.Transparency = 50;
  oWater.Animate(0, 2, eRepeat, eNoBlock);
  hSink.SetTextProperty("defaultVerb", "turn off");
    hSink.SetTextProperty("useVerb", "turn off");
  
 
    sinkOn = true;
  }
  player.Animate(7, 2, eOnce, eBlock, eBackwards, 5);
  player.UnlockView(eStopMoving);
  player.Loop = eDirectionUp;
}

function hSink_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
     
    walkToAndFace(656, 125, eDirectionUp, 666, 135);
  break;
  case 1://look
   player.FaceLocation(656, 100, eBlock);
    lookAbiPaul("Kindly old sink, friend to all.", "Good old, reliable kitchen sink.");
  break;
  case 2://use
    
    toggleSink();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    if(IsPlayerAbi)
    {
      Canned.fuckAnyone();
    } else {
      if(Find.inRect(642, 111, 677, 130))
      {
        cPaul.piss();
      } else {
        Canned.tooFar();
      }
    }
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}

}

function oFridge_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(697, 130, eDirectionUp, 583, 135); 
  break;
  case 1://look
    player.FaceLocation(612, 120, eBlock);
    lookAbiPaul("fridge", "fridge");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openFridge();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;

}

function oFreezer_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(687, 126, eDirectionUpRight, 680, 135); 
  break;
  case 1://look
    player.FaceLocation(709, 120, eBlock);
    lookAbiPaul("freezer", "freezdr");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
  player.GoTo(687, 126, eBlock);
    openFreezer();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oDraw3_AnyClick()
{
  switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(645, 124, eDirectionUp, 639, 135); 
  break;
  case 1://look
    player.FaceLocation(619, 125, eBlock);
    lookAbiPaul("drawer", "drawer");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openDrawer(oDraw3);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oDraw2_AnyClick()
{
  switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(645, 124, eDirectionUp, 639, 135); 
  break;
  case 1://look
    player.FaceLocation(619, 125, eBlock);
    lookAbiPaul("drawer", "drawer2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openDrawer(oDraw2);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oDraw1_AnyClick()
{
  switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(645, 124, eDirectionUp, 639, 135); 
  break;
  case 1://look
    player.FaceLocation(619, 125, eBlock);
    lookAbiPaul("drawer", "drawer1");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openDrawer(oDraw1);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}



function oCupboard1_AnyClick()
{
 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(656, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(650, 114, eBlock);
    lookAbiPaul("cupboard1", "cupboard1");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
   
    openCupboard(oCupboard1,  656, 125, eDirectionUp);
    
    
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard2_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(656, 125,  eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openCupboard(oCupboard2,  656, 125, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard3_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
     walkToAndFace(656 + 19, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openCupboard(oCupboard3,  656 + 19, 125, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oOvenDoor_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
     walkToAndFace(657, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openOven();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard4_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(657, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openCupboard(oCupboard4,  648, 124, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard5_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
   walkToAndFace(657, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openCupboard(oCupboard5,  648, 124, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard6_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
   walkToAndFace(657, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
   openCupboard(oCupboard6,  648, 124, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard7_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
     walkToAndFace(657, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openCupboard(oCupboard7,  648, 124, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard8_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(657, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openCupboard(oCupboard8,  648, 124, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard9_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
     walkToAndFace(657, 125, eDirectionUp, 667, 135); 
  break;
  case 1://look
    player.FaceLocation(652, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    openCupboard(oCupboard9,  648, 124, eDirectionUp);
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;
}

function room_Leave()
{
HandyHelper.memorizeCamPos();
}

function moveBackgroundObject(Object* theObject,  int xPosition,  float distance)
{
  theObject.X = xPosition + FloatToInt((IntToFloat(Game.Camera.X) / distance));
}
function late_repeatedly_execute_always()
{
  moveBackgroundObject(oClouds, 240, 2.0);
}
function region2_Standing(Region *theRegion)
{
  region2_WalksOnto();
}
