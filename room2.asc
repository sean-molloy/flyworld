/****************************FLAT KITCHEN********************************************/



/**********************Cupboards and fridge****************************************************/

bool fridgeOpen = false;
bool freezerOpen = false;
bool drawer3Open = false;
bool drawer2Open = false;
bool drawer1Open = false;
bool cupboard1Open = false;
bool cupboard2Open = false;
bool cupboard3Open = false;
bool cupboard4Open = false;
bool cupboard5Open = false;
bool cupboard6Open = false;
bool cupboard7Open = false;
bool cupboard8Open = false;
bool cupboard9Open = false;

function setupOven()
{
  if(ovenOpen)
  {
    RemoveWalkableArea(4);
    oOvenDoor.SetView(60, 0, 6);
  } else {
    oOvenDoor.SetView(60, 0, 0);
  }
}

function handleWalkables()
{
  if(ovenOpen)
  {
    RemoveWalkableArea(4);
  }
}

function setupCupboards()
{
  if(cupboard1Open)
  {
    oCupboard1.SetView(57, 0, 5);
  } else
  {
    oCupboard1.SetView(57, 0, 0);
  }
  
    if(cupboard2Open)
  {
    oCupboard2.SetView(58, 0, 5);
  } else
  {
    oCupboard2.SetView(58, 0, 0);
  }
  
  
    if(cupboard3Open)
  {
    oCupboard3.SetView(59, 0, 7);
  } else
  {
    oCupboard3.SetView(59, 0, 0);
  }

  if(cupboard4Open)
  {
    oCupboard4.SetView(61, 0, 7);
  } else
  {
    oCupboard4.SetView(61, 0, 0);
  }
  if(cupboard5Open)
  {
    oCupboard5.SetView(62, 0, 7);
  } else
  {
    oCupboard5.SetView(62, 0, 0);
  }
  if(cupboard6Open)
  {
    oCupboard6.SetView(63, 0, 7);
  } else
  {
    oCupboard6.SetView(63, 0, 0);
  }
  if(cupboard7Open)
  {
    oCupboard7.SetView(64, 0, 7);
  } else
  {
    oCupboard7.SetView(64, 0, 0);
  }
  if(cupboard8Open)
  {
    oCupboard8.SetView(65, 0, 7);
  } else
  {
    oCupboard8.SetView(65, 0, 0);
  }
  if(cupboard9Open)
  {
    oCupboard9.SetView(66, 0, 7);
  } else
  {
    oCupboard9.SetView(66, 0, 0);
  }
}

function openOven()
{
  if(ovenOpen)
  {
    aOvenDoorOpen.Play(eAudioPriorityHigh, eOnce);
    oOvenDoor.Animate(0, 1, eOnce, eBlock, eBackwards);
    RestoreWalkableArea(4);
    oOvenDoor.Baseline = 12;
    ovenOpen = false;
  } else {
    RemoveWalkableArea(4);
    aOvenDoorOpen2.Play(eAudioPriorityHigh, eOnce);
    oOvenDoor.Animate(0, 1, eOnce, eBlock, eForwards);
    ovenOpen = true;
    oOvenDoor.Baseline = 141;
  }
}

function closeDrawer(int whichDrawer)
{
  aDrawer.Play(eAudioPriorityHigh);
  switch (whichDrawer)
  {
      case 1:
        oDraw1.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        drawer1Open = false;
      break;
      case 2:
        oDraw2.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        drawer2Open = false;
      break;
      case 3:
        oDraw3.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        drawer3Open = false;
      break;
  }
  
}

function randomCupboardSound()
{
  switch(Random(1))
  {
    case 0:
      aCupboard.Play(eAudioPriorityHigh);
    break;
    case 1:
      aCupboard2.Play(eAudioPriorityHigh);
    break;
  }
}

function openCupboard(int cupboardNum)
{
  randomCupboardSound();
  switch (cupboardNum)
  {
    case 1:
      if(cupboard1Open)
      {
        oCupboard1.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard1Open = false;
      } else {
        oCupboard1.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard1Open = true;
      }
    break;
    case 2:     
      if(cupboard2Open)
      {
        oCupboard2.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard2Open = false;
      } else {
        oCupboard2.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard2Open = true;
      }
    break;
    case 3:    
      if(cupboard3Open)
      {
        oCupboard3.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard3Open = false;
      } else {
        oCupboard3.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard3Open = true;
      }
    break;
    case 4:
      if(cupboard4Open)
      {
        oCupboard4.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard4Open = false;
      } else {
        if(drawer1Open)
        {
          closeDrawer(1);
        } 
        if(drawer2Open)
        {
          closeDrawer(2);        
        } 
        if(drawer3Open)
        {  
          closeDrawer(3);        
        }
        oCupboard4.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard4Open = true;
      }    
    break;
    case 5:
      if(cupboard5Open)
      {
        oCupboard5.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard5Open = false;
      } else {
        oCupboard5.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard5Open = true;
      }
    break;
        case 6:
      if(cupboard6Open)
      {
        oCupboard6.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard6Open = false;
      } else {
        oCupboard6.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard6Open = true;
      }
    break;
    case 7:
      if(cupboard7Open)
      {
        oCupboard7.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard7Open = false;
      } else {
        oCupboard7.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard7Open = true;
      }
    break;
    case 8:
      if(cupboard8Open)
      {
        oCupboard8.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard8Open = false;
      } else {
        oCupboard8.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard8Open = true;
      }
    break;
    case 9:
      if(cupboard9Open)
      {
        oCupboard9.Animate(0, 1, eOnce, eNoBlock, eBackwards);
        cupboard9Open = false;
      } else {
        oCupboard9.Animate(0, 1, eOnce, eNoBlock, eForwards);
        cupboard9Open = true;
      }
    break;
  }
}

function setupFridge()
{  
  if(fridgeOpen)
  {
    oFridge.Baseline = 140;
    oFridge.SetView(52, 0, 1); 
    RemoveWalkableArea(2);
  } else {
    oFridge.Baseline = 12;
    oFridge.SetView(52, 0, 0);    
    RestoreWalkableArea(2);
  }
  if(freezerOpen)
   {
     oFreezer.Baseline = 141;
    oFreezer.SetView(53, 0, 1);
    RemoveWalkableArea(2);
  } else {
    oFreezer.Baseline = 13;
    oFreezer.SetView(53, 0, 0);    
    RestoreWalkableArea(2);
  }
}

function openFridge()
{
  
  if(fridgeOpen)
  {
    oFridge.Baseline = 12;    
    oFridge.Animate(0, 1, eOnce, eBlock, eBackwards);
    aFridgeclose.Play(eAudioPriorityHigh);    
    fridgeOpen = false;    
    RestoreWalkableArea(2);
  } else {
  
    aFridge1.Play(eAudioPriorityHigh);
    oFridge.Animate(0, 1, eOnce, eBlock, eForwards);
    oFridge.Baseline = 140; 
    fridgeOpen = true;    
    RemoveWalkableArea(2);
  }
}

function openFreezer()
{
  if(freezerOpen)
  {    
    oFreezer.Baseline = 13;
    oFreezer.Animate(0, 1, eOnce, eBlock, eBackwards);
    aFridgeclose.Play(eAudioPriorityHigh);
    freezerOpen = false;   
    RestoreWalkableArea(2);
  } else {
    oFreezer.Baseline = 141;
    aFridge1.Play(eAudioPriorityHigh);    
    oFreezer.Animate(0, 1, eOnce, eBlock, eForwards);   
    freezerOpen = true;
    RemoveWalkableArea(2);
  } 
}


function setupDrawers()
{
  if(drawer3Open)
  {  
    oDraw3.SetView(54, 0, 3);     
  } else {  
    oDraw3.SetView(54, 0, 0);       
  }
  
  if(drawer2Open)
  {   
    oDraw2.SetView(55, 0, 3);    
  } else {   
    oDraw2.SetView(55, 0, 0);       
  } 
  
    if(drawer2Open)
  {   
    oDraw1.SetView(56, 0, 3);     
  } else {   
    oDraw1.SetView(56, 0, 0);       
  }   
}

function openDrawer3()
{
  aDrawer.Play(eAudioPriorityHigh);
 if(drawer3Open)
  {   
    oDraw3.Animate(0, 1, eOnce, eNoBlock, eBackwards);
    drawer3Open = false;
  } else {
     if(cupboard4Open)
    {
      openCupboard(4);
    }
    oDraw3.Animate(0, 1, eOnce, eNoBlock, eForwards);   
    drawer3Open = true;   
  }   
}

function openDrawer2()
{
  aDrawer2.Play(eAudioPriorityHigh);
 if(drawer2Open)
  {   
    oDraw2.Animate(0, 1, eOnce, eNoBlock, eBackwards);
    drawer2Open = false;   
  } else {
     if(cupboard4Open)
    {
      openCupboard(4);
    }
    oDraw2.Animate(0, 1, eOnce, eNoBlock, eForwards);
    drawer2Open = true;
  }   
}

function openDrawer1()
{
  aDrawer.Play(eAudioPriorityHigh);
   if(drawer1Open)
  {   
    oDraw1.Animate(0, 1, eOnce, eNoBlock, eBackwards);
    drawer1Open = false;
  } else {
    if(cupboard4Open)
    {
      openCupboard(4);
    }
    oDraw1.Animate(0, 1, eOnce, eNoBlock, eForwards);
    drawer1Open = true;
  } 
}







/**********************************************************************************/

function region1_WalksOnto()
{ 
 int remX = player.x + 309;
 int remY = player.y; 
  
 player.ChangeRoom(1,  remX,  remY);
 
}

function region2_WalksOnto()
{
  player.ChangeRoom(3,  player.x, player.y);
}


function changePlayerTime(){
    characterChange = false;
    int otherOne = whichRoomIsOtherOne();

    if(otherOne == 3){
      Game.Camera.SetAt(0, 0);
      oClouds.X = 70;
    } else {
      Game.Camera.SetAt(97,  0);
    }      
  }

function room_FirstLoad()
{
  setupFridge();
  setupDrawers();
  setupCupboards();
  setupOven();
}

function room_Load()
{ 
  handleWalkables();
  changePlayerLocaleOnRoomEnter();
  adjustPhoneVolumeWhilstRinging();
  resumeMusicAfterCHCH(aFlat_theme);
  if(followed)
  { cGhostl.ChangeRoom(301);
  } else {
    seeGhost( 3, 0, 0 );
  }
  followStand(367, 151);
  int otherPlayer = whichRoomIsOtherOne();
  if(otherPlayer == 3)
  {
    followFrom(213,  171, 2);
  } else {
    followFrom(271,  191, 3);
  }
  
  if(characterChange){
      changePlayerTime();
   
      
    } else {
    if(player.PreviousRoom ==3){
      Game.Camera.SetAt(0, 0);
      oClouds.X = 110;
      } else {
      Game.Camera.SetAt(97,  0);
      }
    }
}
function room_AfterFadeIn()
{
  if(Game.Camera.X != 97){
    Game.Camera.TweenPosition(1.1,  97,  0,  eEaseInOutSineTween, eNoBlockTween);
    oClouds.TweenX(1.1, 120, eEaseInOutSineTween, eNoBlockTween);
    }
  followMe(3);
}
function hHotspot1_Look()
{
  player.Say("It's the fridge!");
}

function hHallExit_AnyClick()
{
  switch (verbUsed)
  {
    case 0: //walk
      player.Walk(270, 194);
    break;
    case 1://look
      lookAbiPaul("That way to the hall!", "The hall is through there.");
    break;
    case 2://use
      noUsing();
    break;
    case 3://talk
      lookAbiPaul("Oi! Anyone out there?", "Who's there!?");
    break;
    case 4://move
      noMoving();
    break;
    case 5://fourletters
      fuckAnyone();
    break;
    case 6://take
      cantTake();
    break;
    case 7://inv
      wontWork();
    break;
  }
  verbUsed = 0;
}

function hLoungeExit_AnyClick()
{
  switch (verbUsed)
  {
    case 0: //walk
      player.Walk(214, 170);
    break;
    case 1://look
      lookAbiPaul("That way to the lounge!", "The living room is through there.");
    break;
    case 2://use
      noUsing();
    break;
    case 3://talk
      lookAbiPaul("Oi! Anyone in there?", "Who's there!?");
    break;
    case 4://move
      noMoving();
    break;
    case 5://fourletters
      fuckAnyone();
    break;
    case 6://take
      cantTake();
    break;
    case 7://inv
      wontWork();
    break;
  }
  verbUsed = 0;
}

function hTapKnobs_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    player.Walk(349, 124);
  break;
  case 1://look
    lookAbiPaul("The water tap for the sink.", "These knobs occilate the flow of water through the tap.");
  break;
  case 2://use
    player.Say("cant wait till these taps work!");
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
 
}

function hOvenKnobs_AnyClick()
{
  switch(verbUsed)
  {
  case 0: //walk
    player.Walk(300, 147);
  break;
  case 1://look
    lookAbiPaul("The knobs for the stove.", 
                "These knobs occilate the flow of gas through the stovetop.");
  break;
  case 2://use
    player.Say("cant wait till these knobs work!");
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function hExtractorFan_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    player.Walk(300, 146);
  break;
  case 1://look
    lookAbiPaul("It's the cooking fan.", 
                "This 'extractor fan' doesn't really extract anywhere.");
  break;
  case 2://use
    player.Say("turn on the fan");
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}

}

function hSink_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    player.Walk(349, 120);
  break;
  case 1://look
    lookAbiPaul("Kindly old sink, friend to all.", "Good old, reliable kitchen sink.");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    if(IsPlayerAbi)
    {
      fuckAnyone();
    } else {
      if(inRect(333, 111, 368, 130))
      {
        cPaul.piss();
      } else {
        tooFar();
      }
    }
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}

}

function oFridge_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(388, 130, eDirectionUp, 371, 135); 
  break;
  case 1://look
    player.FaceLocation(400, 120, eBlock);
    lookAbiPaul("fridge", "fridge");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openFridge();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;

}

function oFreezer_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(388, 130, eDirectionUp, 371, 135); 
  break;
  case 1://look
    player.FaceLocation(400, 120, eBlock);
    lookAbiPaul("freezer", "freezdr");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openFreezer();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oDraw3_AnyClick()
{
  switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(321, 125, eDirectionUp, 330, 135); 
  break;
  case 1://look
    player.FaceLocation(310, 125, eBlock);
    lookAbiPaul("drawer", "drawer");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openDrawer3();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oDraw2_AnyClick()
{
  switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(321, 125, eDirectionUp, 330, 135); 
  break;
  case 1://look
    player.FaceLocation(310, 125, eBlock);
    lookAbiPaul("drawer", "drawer2");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openDrawer2();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oDraw1_AnyClick()
{
  switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(321, 125, eDirectionUp, 330, 135); 
  break;
  case 1://look
    player.FaceLocation(310, 125, eBlock);
    lookAbiPaul("drawer", "drawer1");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openDrawer1();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}



function oCupboard1_AnyClick()
{
 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard1", "cupboard1");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(1);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard2_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard2", "cupboard2");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(2);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard3_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard3", "cupboard3");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(3);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oOvenDoor_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("ovenDoor", "ovenDoor");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openOven();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard4_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard4", "cupboard4");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(4);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard5_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard5", "cupboard5");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(5);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard6_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard5", "cupboard5");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(6);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard7_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard5", "cupboard5");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(7);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard8_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard5", "cupboard5");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(8);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}

function oCupboard9_AnyClick()
{

 switch (verbUsed)
  {
  case 0: //walk
    walkToAndFace(348, 125, eDirectionUp, 358, 135); 
  break;
  case 1://look
    player.FaceLocation(342, 114, eBlock);
    lookAbiPaul("cupboard5", "cupboard5");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    openCupboard(9);
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;
}
