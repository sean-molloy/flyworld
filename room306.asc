// room script file

function room_AfterFadeIn()
{
  //bBlackOut.Transparency = 100;
  WaitSeconds(1.0);
  
  

  //Game.Camera.SetSize(288, 160);
  //Game.Camera.TweenSize(1.0, 324, 180, eEaseInOutSineTween, eNoBlockTween);
   Game.Camera.TweenSize(2.0, 360, 200, eEaseOutCircTween, eNoBlockTween);
  oGlow.Animate(1, 6, eRepeat, eNoBlock, eForwards);
  playMusic(aTitleScreenMusic1);
  bBlackOut.TweenTransparency(1.0, 100, eEaseInOutSineTween, eNoBlockTween);
  
  oFLyWorld.SetView(202);
  oFLyWorld.Animate(0, 5, eRepeat, eNoBlock);     
  oFLyWorld.TweenY(4.0, 73, eEaseOutCircTween, eNoBlockTween);
  if(!Game.InSkippableCutscene)
  {
    StartCutscene(eSkipAnyKeyOrMouseClick);
  }
  WaitSeconds(1.0);
 
  oText3.Transparency = 100;
  oText3.Visible = true;
  oGlow.Transparency = 100;
   oGlow.Visible=true;
   oGlow.TweenTransparency(0.7, 0, eEaseOutCircTween, eNoBlockTween);
  oText3.TweenTransparency(0.5, 0, eEaseOutCircTween, eBlock); 
 // WaitSeconds(1.0);
 
   
    oGlow.TweenTransparency(3.0, 100, eEaseInBackTween, eNoBlockTween);
  oText3.TweenTransparency(3.0, 100, eEaseInBackTween, eBlock);
  gTitleMenuL.Transparency = 100;
  gTitleMenuR.Transparency = 100;
  gTitleMenuL.Visible = true;
  gTitleMenuR.Visible = true;
  gTitleMenuL.TweenTransparency(0.8, 0, eEaseInOutSineTween, eNoBlockTween);
  gTitleMenuR.TweenTransparency(0.8, 0, eEaseInOutSineTween, eBlockTween);
  EndCutscene();
  oFLyWorld.TweenY(300.0, 0, eEaseLinearTween, eNoBlockTween);
   cWarrior.ManualScaling = true;
cWarrior.Scaling = 20;
cWarrior.Walk(-30, cWarrior.y, eNoBlock, eAnywhere);
}

function room_Load()
{
  
  gIconbar.Visible = false;
  wipeHintBar();
  gHintBar.Visible = false;
  oGlow.SetView(202, 1);
  bBlackOut.Transparency = 0;
  bBlackOut.Visible = true;
  mouse.SetPosition(299, 172);
  
    player.place(180, 140);
  Game.Camera.SetSize(216, 120);
}
 
int mouseBeforeX;
int mouseBeforeY;
function pushDirection(int x,  int y)
{ 
  mouse.SetPosition(x, y); 
  mouseBeforeX = mouse.x; 
  mouseBeforeY = mouse.y;   
  mouse.Visible = false;
}
function pushReturn()
{
  GUIControl* selectedButton = GUIControl.GetAtScreenXY(mouse.x, mouse.y);
  
  if(selectedButton == null)
  {    
    pushDirection(59, 22);
    mouse.Click(eMouseLeft);
    
  } else {      
    mouse.Click(eMouseLeft);
  }  
}




function pushDown()
{
  GUIControl* theButton = GUIControl.GetAtScreenXY(mouse.x, mouse.y);
  
  switch(theButton)
  {
    case bNewGame:
      pushDirection(59, 55);
    break;
    case bLoadGameTitle:
      pushDirection(300, 22);  
    break;
    case bHelpTitle:
      pushDirection(300, 55);
    break;    
    default:
      pushDirection(59, 22);
    break;   
  }

}

function pushUp()
{
  GUIControl* theButton = GUIControl.GetAtScreenXY(mouse.x, mouse.y);
  
  switch(theButton)
  {    
    case bNewGame:
      pushDirection(300, 55);
    break;
    case bLoadGameTitle:
      pushDirection(59, 22);
    break;
    case bHelpTitle:
      pushDirection(59, 55); 
    break;    
    case bQuitTitle:
      pushDirection(300, 22);
    break;
    default:
      pushDirection(300, 55);
    break;       
  }    
}

function pushLeft(eKeyCode theKey)
{
    GUIControl* theButton = GUIControl.GetAtScreenXY(mouse.x, mouse.y);
  
  switch(theButton)
  {
    case bNewGame:
      pushDirection(300, 22);
    break;
    case bLoadGameTitle:
      pushDirection(300, 55);  
    break;
    case bHelpTitle:
      pushDirection(59, 22);
    break; 
    case bQuitTitle:
      pushDirection(59, 55);
    break;
    default:
      if(theKey == eKeyLeftArrow)
      {
        pushDirection(300, 55);
      } else {
        pushDirection(59, 22);
      }
    break;   
  }
}



function on_mouse_click (MouseButton button)
{
  ClaimEvent();
}

function on_key_press (eKeyCode keycode)
{
  if(keycode == eKeyEscape)
  {
    ClaimEvent();
  } else if(keycode == eKeyF5)
  {
    ClaimEvent();
  } else if (keycode == eKeyTab)
  {
    ClaimEvent();
  } else if (keycode == eKeyS)
  {
    ClaimEvent();
  } 
  if(gTitleMenuL.Visible && gTitleMenuR.Visible)
  {
    if (keycode== eKeyReturn)
    {
      pushReturn();
      ClaimEvent();
    } else if (keycode == eKeyDownArrow)
    {
      pushDown();
      ClaimEvent();
    } else if (keycode == eKeyUpArrow)
    {
      pushUp();
      ClaimEvent();
    } else if (keycode == eKeyLeftArrow || keycode == eKeyRightArrow)
    {
      pushLeft(keycode);
      ClaimEvent();
    }
  }
}
function room_Leave()
{
  gTitleMenuL.Visible = false;
  gTitleMenuR.Visible = false;    
}

function showMouseIfMoved()
{
  if(!mouse.Visible)
  {
    if(mouse.x != mouseBeforeX || mouse.y != mouseBeforeY)
    {
      mouse.SetPosition(180, 100);
      mouse.Visible = true;
    }
  }
}

function room_RepExec()
{
  showMouseIfMoved();
}
