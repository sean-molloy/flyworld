function whichRoomIsOtherOne(){
  if(IsPlayerAbi){
    return cPaul.Room;
  } else {
    return cAbi.Room;
  }
}

function changePlayerLocaleOnRoomEnter()
{
  if(!characterChange)
  {
    player.SetProperty("locale", Room.GetProperty("locale"));
  }
}

int savedRed;
int savedBlue;
int savedGreen;
int savedLunim;
int savedSat;
function flashPlayer()
{
  savedRed = player.TintRed;
  savedBlue = player.TintBlue;
  savedGreen = player.TintGreen;
  savedLunim = player.TintLuminance;
  savedSat = player.TintSaturation;
  
 player.SetLightLevel(100);
  player.TweenLightLevel(0.5, 100,  1, eEaseOutBounceTween, eBlock);
  if(savedBlue + savedRed + savedGreen == 0)
  {
    player.RemoveTint();
  } else {
    player.Tint(savedRed, savedGreen, savedBlue, savedSat, savedLunim);
  }
  
}

function highlightNewPlayer()
{   aChch3.Play(eAudioPriorityNormal);
  if(cPaul.Room == cAbi.Room)
  {
    flashPlayer();
  }
}


function resetMouseMode()
{
  mouse.Mode = eModeWalkto;
}

function disableSwitchButton()
{
   btnChch.Enabled = false;
  SetTimer(2, 60);
}

function stopFollowingOnSwitch()
{
   if(followed)
  {
    followed = false;
    dAbiToPaul.SetOptionState(2, eOptionOn);
    dAbiToPaul.SetOptionState(3, eOptionOff);
    dPaulToAbi.SetOptionState(2, eOptionOn);
    dPaulToAbi.SetOptionState(3, eOptionOff);
  }
}

function tweenFromHallToHall()
{
  
  Game.Camera.StopAllTweens();
  Game.Camera.TweenPosition(1.5, player.GetProperty("cityCamX"),  player.GetProperty("cityCamY"), 
  eEaseInOutSineTween, eBlockTween);   
  characterChange = false;
  
}

function changePhoneVolumeWhenRinging()
{
  if(phoneRinging!=null)
    {
      if(phoneRinging.IsPlaying)
      {
        phoneRinging.Volume = 30;        
      }
    }
}

function tweenFromHallToOtherRooms()
{
  float timeToTween = 0.7;
  int tweenerX = 0;
  int tweenerY = 0;
  switch( Find.whichRoomIsOtherOne() ){
    case 2:
      //pan to kitchen    
      tweenerX = 406;       
    break;
    case 3:
      //pan to lounge
      tweenerX = 309;      
    break;
    case 4:
      //pan to pauls room
      tweenerX = 400;
      tweenerY = 95;      
    break;
    case 5:
      //pan to abis room
      tweenerY = 32;       
    break;
    case 6:
      tweenerX = 180;       
    break;
    default:
      tweenerX = Game.Camera.X;
      tweenerY = Game.Camera.Y;
      timeToTween = 0.01;
    break;
    }
    Game.Camera.TweenPosition(timeToTween,  tweenerX,  tweenerY,  eEaseOutSineTween, eBlockTween); 
    
}

function tweenToOtherFlatRoomFromHall()
{
  if(cPaul.GetProperty("locale") == 1 && cAbi.GetProperty("locale") == 1 )
  {  
    if(IsPlayerAbi)
    {
      if(cAbi.Room == 1 && cPaul.Room != 1)
      {
        Game.Camera.TweenPosition(1.5, cPaul.GetProperty("cityCamX"), cPaul.GetProperty("cityCamY"),
        eEaseInOutSineTween, eBlock);
      }
    } else {
      if(cPaul.Room ==1 && cAbi.Room != 1)
      {
       Game.Camera.TweenPosition(1.5, cAbi.GetProperty("cityCamX"), cAbi.GetProperty("cityCamY"),
        eEaseInOutSineTween, eBlock);   
      }
    }
  }
}

function scrollHallToHall()
{
  if( player.x < Game.Camera.X + 10 ||
      player.x > Game.Camera.X + 350 ||
      player.y < Game.Camera.Y + 40 ||
  player.y > Game.Camera.Y + 190 )
  {
    Game.Camera.StopAllTweens(ePauseTween);
  Game.Camera.TweenPosition(1.5, player.GetProperty("cityCamX"), player.GetProperty("cityCamY"),
      eEaseInOutSineTween, eBlock);
  }
}

function tweeningfromTheHall()
{
  if(cPaul.GetProperty("locale") == 1 && cAbi.GetProperty("locale") == 1 )
  {  
    if(cPaul.Room == 1 && cAbi.Room == 1)
    {      
      scrollHallToHall();
    } else {
      if(player.Room == 1)
      {
        
      } else {
        //Game.Camera.SetAt(player.GetProperty("cityCamX"), player.GetProperty("cityCamY"));      
      }
    } 
  } 
}

function abiToWank()
{
  cAbi.SetTextProperty("fourVerb","wank");
  cAbi.SetTextProperty("moveVerb","dance");
  cPaul.SetTextProperty("fourVerb","fuck");
  cPaul.SetTextProperty("moveVerb","push");
}

function paulToWank()
{
   cAbi.SetTextProperty("fourVerb","fuck");
   cAbi.SetTextProperty("moveVerb","push");
  cPaul.SetTextProperty("fourVerb","wank");
  cPaul.SetTextProperty("moveVerb","dance");
}
function actuallyChangeCharacter()
{
     if(IsPlayerAbi){
      cPaul.SetAsPlayer();
      paulToWank();
      IsPlayerAbi = false;
    } else {
      cAbi.SetAsPlayer();
      abiToWank();
      IsPlayerAbi = true;
    }
}

function scrollingFlatExterior()
{
  //both in room 7 scrolling
    if(cPaul.Room == 7 && cAbi.Room == 7)
    {
      if(Find.findPlayer() != Find.findOtherPlayer())
      {        
        switch(Find.findPlayer())
        {
          case 1:          
            Game.Camera.TweenSize(1.0, 940, 522, eEaseInBackTween, eBlockTween);
            Game.Camera.AutoTracking = true;          
            Game.Camera.TweenSize(1.0, 360, 200, eEaseOutBackTween, eBlockTween); 
            Game.Camera.TweenPosition(1.0, 10, 322, eEaseInOutBackTween, eNoBlockTween);
            zoomedOut = false;
          break;
          case 2:          
            Game.Camera.TweenSize(1.0, 940, 522, eEaseInBackTween, eNoBlockTween);
            zoomedOut = true;          
          break;
          case 3:          
            Game.Camera.TweenSize(1.0, 940, 522, eEaseInBackTween, eBlockTween);
            Game.Camera.AutoTracking = true;          
            Game.Camera.TweenSize(1.0, 360, 200, eEaseOutBackTween, eBlockTween); 
            Game.Camera.TweenPosition(1.0, 546, 322, eEaseInOutBackTween, eNoBlockTween); 
            zoomedOut = false;
          break;
          case 4:
          Display("error");
          break;
        }
      }
      characterChange = false;
    }
}

function scrollingOmniCor1()
{
  if(cPaul.Room == 12 && cAbi.Room == 12 && Find.findPlayer() != Find.findOtherPlayer())
  {
    if(Find.findOtherPlayer() == 1)
    {
      Game.Camera.TweenX(1.0, 0, eEaseInOutSineTween, eNoBlockTween);
    } else {
      Game.Camera.TweenX(1.0, 250, eEaseInOutSineTween, eNoBlockTween);      
    }
  }
}

function scrollingOmniOffice()
{
  if(cPaul.Room == 13 && cAbi.Room == 13 && Find.findPlayer() != Find.findOtherPlayer())
  {
    if(Find.findOtherPlayer() == 1)
    {
      Game.Camera.TweenX(1.0, 306, eEaseInOutSineTween, eNoBlockTween);
    } else if (Find.findOtherPlayer() == 2)
    {
      Game.Camera.TweenX(1.0, 524, eEaseInOutSineTween, eNoBlockTween);
    } else if (Find.findOtherPlayer() == 3)
    {
       Game.Camera.TweenX(1.0, 707, eEaseInOutSineTween, eNoBlockTween);
    }    
  }
}

function scrollingOmniCor2()
{
  if(cPaul.Room == 14 && cAbi.Room == 14 && Find.findPlayer() != Find.findOtherPlayer())
  {
    if(Find.findOtherPlayer() == 1)
    {
      Game.Camera.TweenX(1.0, 224, eEaseInOutSineTween, eNoBlockTween); 
    } else {
      Game.Camera.TweenX(1.0, 478, eEaseInOutSineTween, eNoBlockTween);
    }
    
  }
}

function stopPhoneRinging()
{
  if(phoneRinging!=null)
  {
    if(phoneRinging.IsPlaying)
    {
      if(Find.findLocale() == 1 && Find.findOtherLocale() != 1)
      {
        phoneRinging.TweenFadeOut(0.2, eEaseInSineTween, eNoBlockTween);
        gAlert.Visible = false;
      }
    }
  }
}

function switchFromAlarm()
{  
  Character* otherChar;
  if(IsPlayerAbi)
  {
    otherChar = cPaul;
  } else {
    otherChar = cAbi;
  }
  
  if(otherChar.Room == 303)
  {
    //put otherChar in sleep mode, whatever that means
    otherChar.ChangeRoom(otherChar.PreviousRoom);
  }
}

function allowSkipping()
{
  allowSkipWalk = true;
}

function stopSkippingNow()
{
  //zUnskipWalking();
  player.AnimationSpeed = 4;
  
}

bool isPlayerButNotOtherPlayerInFlat()
{
  if(Find.findLocale() == 1)
  {
    return true;
  }
  return false;
}

function saveCityCamPos()
{
  //Display(String.Format("player locale: %d, other Locale: %d", Find.findLocale(), Find.findOtherLocale()));
  if(player.Room == eRooms_Bucklame_Town || 
  player.Room == eRooms_Newton_Gully || 
  player.Room == eRooms_FlatExterior || 
  isPlayerButNotOtherPlayerInFlat())//player is out in big exterior rooms
  {
   // Display("saving cam position before char changes.");
    player.SetProperty("cityCamX",Game.Camera.X);
    player.SetProperty("cityCamY",Game.Camera.Y);
  }
}

function saveCityCamPosOnStart()
{
  

  cPaul.SetProperty("cityCamX",cPaul.x - 180);
  cPaul.SetProperty("cityCamY",60);
}

int camDistance(int targetX,  int targetY)
{
  int result = FloatToInt(  TweenMaths.GetDistance(Game.Camera.X, Game.Camera.Y, targetX, targetY) );
  return result;
}



function isCharOnScreen(Character* theChar)
{
  if(theChar.x > Game.Camera.X && theChar.x < Game.Camera.X + Game.Camera.Width &&
  theChar.y > Game.Camera.Y && theChar.y < Game.Camera.Y + Game.Camera.Height)
  {
    return true;
  } else { return false; }
}


function setScrollType()
{
  
  player.SetProperty("scrollType", letsScroll);
}

function getScrollType()
{
  letsScroll = player.GetProperty("scrollType");
}

function scrollingCity()
{
  if((player.Room == eRooms_Bucklame_Town || player.Room == eRooms_Newton_Gully
  || player.Room  == eRooms_FlatExterior) && cPaul.Room == cAbi.Room)
  {    
    if(cPaul.Room == cAbi.Room)
    {        
      if((isCharOnScreen(player) || player.Room == eRooms_FlatExterior) &&
      cPaul.GetProperty("cityCamX") != cAbi.GetProperty("cityCamX"))
      {
        Game.Camera.TweenPosition(0.7, player.GetProperty("cityCamX"), player.GetProperty("cityCamY"), 
        eEaseInOutSineTween, eBlockTween);
      } else {
        Game.Camera.SetAt(player.GetProperty("cityCamX"), player.GetProperty("cityCamY"));
      }     
    }     
  }    
}

function cityScrollOnCharChange()
{      
  Game.Camera.SetAt(player.GetProperty("cityCamX"), player.GetProperty("cityCamY"));
  Game.Camera.SetSize(360, 200);
 
}

function inSameRoom()
{
  if(cPaul.Room == cAbi.Room)
  {
    characterChange = false;
  }
}

function stopAmbientSounds()
{

}

function switchCharPointer()
{
  if(IsPlayerAbi)
  {
    cOtherCharacter = cPaul;
  } else {
    cOtherCharacter = cAbi;
  }
}

function switchProtagonist()
{
  
  setScrollType();
  saveCityCamPos();
  
  resetMouseMode();
  disableSwitchButton();
  stopFollowingOnSwitch();
  characterChange = true;
  
  
 
  scrollingOmniCor1();
  scrollingOmniOffice();
  scrollingOmniCor2();
  
  stopPhoneRinging();
  HandyHelper.memorizeCamPos();
  tweenToOtherFlatRoomFromHall(); 
  
  
  /////////////////////
  actuallyChangeCharacter();
  /////////////////////
  
  switchCharPointer();
  
  scrollingCity();
  tweeningfromTheHall();
  
  
  //scrollingFlatExterior();
  highlightNewPlayer();  
  switchFromAlarm();
  allowSkipping();
  stopSkippingNow();
  getScrollType();
  inSameRoom();
}
    