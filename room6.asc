// room script file
bool lookOnce;


function region1_WalksOnto()
{  
  Game.Camera.StopAllTweens();
  HandyHelper.memorizeCamPos();
  player.ChangeRoom(eRooms_FlatHallway);
}


function makeReflection(){
cDummy.ChangeRoom(eRooms_FlatToilet);
cDummy.ChangeView(player.View);
cDummy.x=104;
cDummy.y=162;
cDummy.Tint(1, 2, 1, 50, 100);
cDummy.Baseline=1;
}

function room_Load()
{
  
  lookOnce = false;
  changePlayerLocaleOnRoomEnter();
  makeReflection();
  Phone.adjustPhoneVolumeWhilstRinging();
  resumeMusicAfterCHCH(aFlat_theme);
  if(characterChange)
  {
    
    Game.Camera.SetAt(180, 0);
  } else {
    Game.Camera.SetAt(HandyHelper.recallCamX(), HandyHelper.recallCamY());
  }
  followInThisRoom = false;
  player.PlaceOnWalkableArea();
  
  if(oToiletSeat.GetProperty("isItOpen"))
  {
    oToiletSeat.SetView(234, 0, 4);
  } else {
    oToiletSeat.SetView(234, 0, 0);
  }
}

function room_AfterFadeIn()
{
  if(characterChange)
  {
    characterChange = false; 
    flashPlayer();
  } else 
  {
    Game.Camera.TweenPosition(1.8, 180, 0, eEaseInOutSineTween, eNoBlockTween);
  }
  if( cAbi.Room == eRooms_FlatToilet && cPaul.Room == eRooms_FlatToilet )
  {
    player.Say("What are you doing in here?");
    cPaul.FaceCharacter(cAbi);    
    cPaul.Say("I dunno, hanging out?");
    WaitMouseKey(30);
    player.Say("Oh yeah...");
  }
}
function moveReflection(){
  if(player.x>344)
  {
    int wall_y = 145;
    
    if(player.Speaking)
    {
      cDummy.ChangeView(player.SpeechView);
    } else {
      if(cDummy.View != player.View)
      {
        cDummy.ChangeView(player.View);
      }
    }
    cDummy.y = wall_y - ((player.y-wall_y)*8)/10;  
    cDummy.x = player.x+(player.y-wall_y);
    cDummy.Frame = player.Frame;
    int l = player.Loop;
    if (l==0){l=3;}
      else if(l==3){l=0;}
      else if(l==4){l=5;}
      else if(l==5){l=4;}
      else if(l==6){l=7;}
      else if(l==7){l=6;}
    cDummy.Loop = l;
  } else {
    if(!cDummy.isAt(1, 1))
    {
      cDummy.place(1, 1);
    }
  
  }
}

String makeWord()
{
  switch(Random(2))
  {
    case 0:
      return "What a";
    break;
    case 1:
      return "Such a";
    break;
    case 2:
      return "Damn";
    break;    
  }
}

function lookingInMirror(){
  if(Find.inRect(350, 145, 394, 164))
  {
    player.Walk(389, 154, eBlock);
    player.FaceDirection(eDirectionUp, eBlock);
    String playerSayString;
    if(IsPlayerAbi)
    {
      playerSayString = "I'm looking good, considering the circumstances.";
    } else {
      if(!lookOnce)
      { 
        player.SayAt(player.x - 150, player.y-80, 300, "Hello, stupid face.");
        lookOnce = true;
      }
      playerSayString = String.Format("%s %s.", makeWord() ,HandyHelper.generateSwear());
    }
    player.SayAt(player.x - 150, player.y-80, 300,  playerSayString);
   
   // lookAbiPaul("I'm looking good, considering the circumstances.",
     //           "Hello, stupid face.");
  } else {
    lookAbiPaul("It's a mirror.",
                "Classic bathroom mirror.");
  }
}

function late_repeatedly_execute_always()
{
  moveReflection();
  }
function room_RepExec()
{
  
 
}
/********************************HOTSPOTS*************************HOTSPOTS***********************************/
function hToilet_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(308, 181, eDirectionLeft, 318, 181);

  break;
  case 1://look  
    Beepers.sendBeep("test line one","test line two");
    Beepers.showAbisBeeper();
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    if(oToiletSeat.GetProperty("isItOpen"))
    {
      oToiletSeat.Animate(0, 1, eOnce, eBlock, eBackwards);
      oToiletSeat.SetProperty("isItOpen", false);
       hToilet.SetTextProperty("moveVerb","lift");
       oToiletSeat.SetTextProperty("moveVerb","lift");
    } else {
      oToiletSeat.Animate(0, 1, eOnce, eBlock, eForwards);
      oToiletSeat.SetProperty("isItOpen", true);
      hToilet.SetTextProperty("moveVerb","lower");
      oToiletSeat.SetTextProperty("moveVerb","lower");
    }
  
  break;
  case 5://fourletters
    player.pooWees();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    lookAbiPaul("No, it'd probably clog the pipes.",
                "This isn't the kind of toilet that flushes stuff through time.");
  break;
}
verbUsed = 0;
}



function hExit_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    player.GoTo(318, 196);
  break;
  case 1://look
    lookAbiPaul("That way back to the hall!", "It's the only way in or out of here.");
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;

}

function hMirror_AnyClick()
{
switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(389, 154, eDirectionUp, 387, 164);      
  break;
  case 1://look
    lookingInMirror();    
  break;
  case 2://use
    Canned.noUsing();
  break;
  case 3://talk
    Canned.noTalking();
  break;
  case 4://move
    Canned.noMoving();
  break;
  case 5://fourletters
    Canned.fuckAnyone();
  break;
  case 6://take
    Canned.cantTake();
  break;
  case 7://inv
    Canned.wontWork();
  break;
}
verbUsed = 0;

}

function room_Leave()
{
  HandyHelper.memorizeCamPos();
}
