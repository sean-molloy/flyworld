// new module script
bool streetlightsOn = false;

function turnStreetLightsOn(bool turnOn)
{
  streetlightsOn = turnOn;
}
function getDistance(int x, int y)
{
  float deltaX = IntToFloat(x - player.x);
  float deltaY = IntToFloat(y - player.y);
  
  float distance = Maths.Sqrt(deltaX * deltaX + deltaY * deltaY);
  return FloatToInt(distance);
}

function streetLight(int x, int y)
{
  if(streetlightsOn)
  {
    int theDistance = getDistance(x, y);
    
    if(theDistance > 100)
    {
    
    } else if (theDistance < 20)
    {
      if(player.LightLevel < 20)
      {
        player.SetLightLevel(20);
      }
    } else {
      player.SayBackground(String.Format("%d", theDistance));
      player.SetLightLevel(20 -(theDistance - 20));
    }
  }
}
int Abs(int value)
{
    if (value < 0)
    {
        return -value;
    }
    else
    {
        return value;
    }
}
int Max(int a, int b)
{
    if (a > b)
    {
        return a;
    }
    else
    {
        return b;
    }
}
function streetLightSquare(int centerX, int centerY, int squareSize)
{
  if(streetlightsOn)
  {
    int halfSize = squareSize / 2;

    int deltaX = Abs(player.x - centerX);
    int deltaY = Abs(player.y - centerY);

    if (deltaX <= halfSize && deltaY <= halfSize)
    {
        // Inside the square
        if(player.LightLevel!=20)
        {
          player.SetLightLevel(20);
        }
    }
    else
    {
        int maxDistance = halfSize + 40;
        int distance = Max(deltaX, deltaY);

        if (distance > maxDistance)
        {
            // Outside the square and transitional zone, reduce light level to -60
            //player.SetLightLevel(-80);
        }
        else
        {
            // Within the transitional zone, decrease light level gradually
            int lightLevel = 20 - ((distance - halfSize) * 3);
            player.SetLightLevel(lightLevel);
        }
    }
  }
}


