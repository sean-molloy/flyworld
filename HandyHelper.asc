// new module script


static String HandyHelper::stringifyInt(int theInt)
{
  /*  Input */
  String oneString = "";
  String tenString = "";
  String hundredString = "";
  String intString = String.Format("%d", theInt);  
  
  /*  Results */
  String hundreds = "";
  String ones = "";
  String tens = "";
  String teens = "";
  String output = "";
  
  
  /*  break down number into digits  */
  if(intString.Length == 3)
  {
    hundredString = intString.Substring(0, 1);
    tenString =     intString.Substring(1, 1);
    oneString =     intString.Substring(2, 1);
    
  } else if (intString.Length == 2)
  {
    hundredString = "";
    tenString =     intString.Substring(0, 1);
    oneString =     intString.Substring(1, 1);
  } else if (intString.Length == 1)
  {
    hundredString = "";
    tenString =     "";
    oneString =     intString;
  }
  
  /*   write first digit   */
  switch(oneString)
  {
    case "0":
      ones = "zero";
    break;
    case "1":
      ones = "one";
    break;
    case "2":
      ones = "two";
    break;
    case "3":
      ones = "three";
    break;
    case "4":
      ones = "four";
    break;
    case "5":
      ones = "five";
    break;
    case "6":
      ones = "six";
    break;
    case "7":
      ones = "seven";
    break;
    case "8":
      ones = "eight";
    break;
    case "9":
      ones = "nine";
    break;  
  }
  
  switch (tenString)
  {    
    case "0":
      
    break;
    case "1":
      if(oneString == "1")
      {
        tens = "eleven";
        ones = "";
      } else if (oneString == "2")
      {
        tens = "twelve";
        ones = "";
      } else if (oneString == "3")
      {
        tens = "thir";
        ones = "";
        teens = "teen";
      } else {
        tens = "";
        teens = "teen";
      }
    break;
    case "2":
      tens = "twenty-";
    break;
    case "3":
      tens = "thirty-";
    break;
    case "4":
      tens = "forty-";
    break;
    case "5":
      tens = "fifty-";
    break;
    case "6":
      tens = "sixty-";
    break;
    case "7":
      tens = "seventy-";
    break;
    case "8":
      tens = "eighty-";
    break;
    case "9":
      tens = "ninety-";
    break;
      }

  switch (hundredString)
  {    
    case "0":
      
    break;
    case "1":
      hundreds = "one hundred and ";
    break;
    case "2":
      hundreds = "two hundred and ";
    break;
    case "3":
      hundreds = "three hundred and ";
    break;
    case "4":
      hundreds = "four hundred and ";
    break;
    case "5":
      hundreds = "five hundred and ";
    break;
    case "6":
      hundreds = "six hundred and ";
    break;
    case "7":
      hundreds = "seven hundred and ";
    break;
    case "8":
      hundreds = "eight hundred and ";
    break;
    case "9":
      hundreds = "nine hundred and ";
    break;
      }

  output = String.Format("%s%s%s%s",hundreds, tens, ones, teens);

  return output;
}


static String HandyHelper::capitaliseSentence(String inputString)
{
  String firstLetter = inputString.Truncate(1);
  String capitalized = firstLetter.UpperCase();
  String sentence = inputString.Substring(1, inputString.Length);
  return capitalized.Append(sentence);
}


function SCABS(this Character*, int num)
{
  int SCABS = this.GetProperty("SCABS"); 
  
  if(num == -1) //if default, just return current scabs
    { return SCABS; 
  } else if (num == 1)  //if 1, increment
  { 
    this.SetProperty("SCABS", SCABS + 1);
  } else {
    this.SetProperty("SCABS", num); //if another number, set to this number.
  }
  return this.GetProperty("SCABS");
}
