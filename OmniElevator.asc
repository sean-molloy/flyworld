// new module script
int liftState = 0;
int liftLocation;
bool floorChosen;

static bool OmniElevator::isFloorChosen()
{
  return floorChosen;
}

static bool OmniElevator::chooseFloor(bool input)
{
  floorChosen = input;
}

function changeRoomFromLift(Character* theChar, int theRoom)
{
  int x, y;
  
  if(theRoom == eRooms_Omni_CorridorRight)
  {    
    x = 478;
    y = 40;
    theChar.ChangeRoom(theRoom, theChar.x + x, theChar.y - y);
  } else if (theRoom == eRooms_Omni_Lobby)
  {
    x = 28;
    y = 101;
    theChar.ChangeRoom(theRoom, theChar.x + 13, theChar.y - 71);
  }    
}

static void OmniElevator::ShowPanel()
{
  gIconbar.Visible = false;  
  gLiftPanel.Visible = true;
  gLiftPanel.TweenTransparency(0.3, 0, eEaseInOutSineTween, eBlockTween);  
}

static void OmniElevator::HidePanel()
{
  gLiftPanel.TweenTransparency(0.3, 100, eEaseInOutSineTween, eBlockTween);  
  gIconbar.Visible = true;  
}

static int OmniElevator::getLiftLocation()
{
  return liftLocation;
}

static void OmniElevator::setLiftLocation(int num)
{
  liftLocation = num;
}

static int OmniElevator::SCABS(int num)
{    
  if(num == -1) //if default, just return current scabs
    { return liftState; 
  } else if (num == 1)  //if 1, increment
  { 
    liftState++;
  } else {
    liftState = num; //if another number, set to this number.
  }
  return liftState;
}

function buttonSound()
{
  aClick1.Play(eAudioPriorityHigh, eOnce);
}

static void OmniElevator::buttonBasement()
{
  buttonSound();
  lookAbiPaul("The lift won't take me to the carpark without my lanyard.", 
              "It doesn't do anything.");
}


static void OmniElevator::buttonGround()
{
  buttonSound();
  floorChosen = true;
  OmniElevator.HidePanel();
  if(liftLocation == 0)
  {
    StartCutscene(eSkipESCOnly);
    changeRoomFromLift(player, player.PreviousRoom);
  } else {
    OmniElevator.SCABS(9);  
  }
}


static void OmniElevator::buttonOne()
{
  buttonSound();
  lookAbiPaul("That floor is restricted.", 
              "It doesn't do anything.");
}


static void OmniElevator::buttonTwo()
{
  buttonSound();
  lookAbiPaul("That floor is restricted.", 
              "It doesn't do anything.");
}


static void OmniElevator::buttonThree()
{
  buttonSound();
  floorChosen = true;
  OmniElevator.HidePanel();
  
  if(liftLocation == 3)
  {
    StartCutscene(eSkipESCOnly);
    changeRoomFromLift(player, player.PreviousRoom);
  } else {
    OmniElevator.SCABS(49);  
  }
}

