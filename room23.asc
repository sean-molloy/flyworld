// room script file
int letsScroll = 0;
function room_Load()
{
  letsScroll = 0;
  changePlayerLocaleOnRoomEnter();
  player.place(1081, 632);
  Game.Camera.SetSize(216, 120);
  Game.Camera.SetAt(868, 538);
  //CityScroll.setAllowScroll(false);
}

function room_AfterFadeIn()
{
  Game.Camera.TweenPosition(1.0,  982, 498, eEaseInOutSineTween, eNoBlockTween);
  Game.Camera.TweenSize(1.0, 360, 200, eEaseInOutSineTween, eNoBlockTween);  
}

int prevReg;
function region1_WalksOnto()
{
  prevReg = 1;
  
  if(!letsScroll)
  {
    SetTimerWithSeconds(12, 1.3);    
    Game.Camera.StopAllTweens(ePauseTween);
    Game.Camera.TweenX(1.3, player.x - 180, eEaseInOutSineTween, eNoBlock);
  }
}

function getScrolling()
{
  if(IsTimerExpired(12))
  {
    if(letsScroll)
    {
      //letsScroll = 0; //changed recently
    } else {
      letsScroll = 1;
    }    
  }  
}

function region2_WalksOnto()
{
  if(prevReg == 1)
  {
    if(letsScroll)
    {
      //SetTimerWithSeconds(12, 1.3);
      letsScroll = 0;
      allowWalk = true;
      Game.Camera.StopAllTweens(ePauseTween);
      Game.Camera.TweenX(1.3, 982, eEaseInOutSineTween, eNoBlock);
      player.Walk(1173, player.y, eNoBlock);
    }
  }
  prevReg = 2;
}


function on_mouse_click (MouseButton button)
{
  if(GetLocationType(mouse.x, mouse.y) == eLocationNothing)
  {
    if(button == eMouseLeft)
    {
      if(mouse.Mode == eModeWalkto)
      {
        if(letsScroll == 1)
        {
          CityScroll.stopDolly();
          CityScroll.Scroll();     
        } else if (letsScroll == 2)
        {        
          CityScroll.ScrollDiag();
        }
      }
    }
  }
}

function moveParallaxObject(Object* theObject, int xPosition, float distance)
{
  theObject.X = (Room.Width - FloatToInt(IntToFloat(Game.Camera.X) / distance)) - xPosition;
}

function moveParalaxBuildingTest()
{
  if(Game.Camera.Y > 400)
  {
    moveParallaxObject(oParalax1, 1500, 5.0);
    //oParalax1.X =  (Room.Width - FloatToInt(IntToFloat(Game.Camera.X) / 5.0)) - 1500;
  }
}



function late_repeatedly_execute_always()
{
  moveParalaxBuildingTest();
  if(letsScroll)
  {
    CityScroll.dollyMove();
  }
}


function region3_WalksOnto()
{
  if(letsScroll == 1)
  {
    //SetTimerWithSeconds(12, 1.3);
    letsScroll = 0;
    allowWalk = true;
    Game.Camera.StopAllTweens(ePauseTween);
    Game.Camera.TweenX(0.8, 260, eEaseInOutSineTween, eNoBlock);
    player.Walk(464, 647, eNoBlock);    
    SetTimerWithSeconds(14, 0.8);
  }
  
}

function setDiagScrollOn()
{
  if(IsTimerExpired(14))
  {
    if(!letsScroll)
    {
      letsScroll = 2;         
    }
  }
}

function region3_WalksOff()
{
  prevReg = 3;
}

function region4_WalksOnto()
{
  if(prevReg == 3)
  {
    //if(!letsScroll)
   // {
      letsScroll = 1;
      SetTimerWithSeconds(12, 1.3);    
      Game.Camera.StopAllTweens(ePauseTween);
      Game.Camera.TweenX(1.3, player.x - 80, eEaseInOutSineTween, eNoBlock);
   // }
    
  } 
}

function dontShowIconsIfHigh()
{
  if(player.y < Game.Camera.Y + 70)
  {
    gIconbar.Visible = false;    
  } else {
    gIconbar.Visible = true;
  }
}

bool animatingMouse = true;
function hRoad_MouseMove()
{
  animatingMouse = false;
  mouse.ChangeModeView(eModeWalkto, -1);
}

function makeMouseAnimateAgain()
{
  if(!animatingMouse)
  {
    if(GetLocationType(mouse.x, mouse.y)==eLocationNothing)
    {
      mouse.ChangeModeView(eModeWalkto, 2);
      animatingMouse = true;
    }
  }
}


function room_RepExec()
{
  makeMouseAnimateAgain();
  dontShowIconsIfHigh();
  CityScroll.emergencyCenterPlayer();
  CityScroll.continueEdgeJump();
  if(letsScroll)
  {
    CityScroll.switchScrollBackOn();  
  }
  setDiagScrollOn();
  getScrolling();
}

function region4_WalksOff()
{
  prevReg = 4;
}

int roadRunCounter = 5;

function hRoad_AnyClick()
{
switch (verbUsed)
  {
    case 0: //walk           
      if(roadRunCounter == 5)
      {
        player.FaceLocation(Game.Camera.X + mouse.x, Game.Camera.Y + mouse.y, eBlock);
        lookAbiPaul("I'm not running on the road!",
                    "It's dangerous on the road!");
        
        roadRunCounter = 0;
      } else {
        roadRunCounter++;
      }
    break;
    case 1://look
      player.FaceLocation(1, 1, eBlock);
      lookAbiPaul("", "");
    break;
    case 2://use
      Canned.noUsing();
    break;
    case 3://talk
      Canned.noTalking();
    break;
    case 4://move
      Canned.noMoving();
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
      Canned.cantTake();
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;
}

