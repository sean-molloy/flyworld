// room script file

function setUpDoors()
{
  oKonbiniDoor.SetView(177, 0, 0);
}

int letsScroll = 0;
function room_Load()
{
  setUpDoors();
  letsScroll = 0;
  changePlayerLocaleOnRoomEnter();
  player.place(1081, 632);
  Game.Camera.SetSize(216, 120);
  Game.Camera.SetAt(868, 538);
  //CityScroll.setAllowScroll(false);
}

function room_AfterFadeIn()
{
  Game.Camera.TweenPosition(1.0,  982, 498, eEaseInOutSineTween, eNoBlockTween);
  Game.Camera.TweenSize(1.0, 360, 200, eEaseInOutSineTween, eNoBlockTween);  
}

int prevReg;
function region1_WalksOnto()
{
  prevReg = 1;
  
  if(!letsScroll)
  {
    SetTimerWithSeconds(12, 1.3);    
    Game.Camera.StopAllTweens(ePauseTween);
    Game.Camera.TweenX(1.3, player.x - 180, eEaseInOutSineTween, eNoBlock);
  }
}

function getScrolling()
{
  if(IsTimerExpired(12))
  {
    if(letsScroll)
    {
      //letsScroll = 0; //changed recently
    } else {
      letsScroll = 1;
    }    
  }  
}

function region2_WalksOnto()
{
  if(prevReg == 1)
  {
    if(letsScroll)
    {
      //SetTimerWithSeconds(12, 1.3);
      letsScroll = 0;
      allowWalk = true;
      Game.Camera.StopAllTweens(ePauseTween);
      Game.Camera.TweenX(1.3, 982, eEaseInOutSineTween, eNoBlock);
      player.Walk(1173, player.y, eNoBlock);
    }
  }
  prevReg = 2;
}


function on_mouse_click (MouseButton button)
{
  if(GetLocationType(mouse.x, mouse.y) == eLocationNothing)
  {
    if(button == eMouseLeft)
    {
      if(mouse.Mode == eModeWalkto)
      {
        if(Region.GetAtScreenXY(mouse.x, mouse.y) == region[15])
        {
          if(player.Moving)
          {
            /*
            if(player.Loop == eDirectionDownLeft
            || player.Loop == eDirectionDownLeft
            || player.Loop == eDirectionUp
            || player.Loop == eDirectionUpLeft)
            {
              if(Game.Camera.X + mouse.x < player.x)
              {
                player.FaceLocation(Game.Camera.X + mouse.x, Game.Camera.Y + mouse.y);
                Game.Camera.StopTweenPosition(ePauseTween);
              }
            } else {
              if(Game.Camera.X + mouse.x > player.x)
              {
                player.FaceLocation(Game.Camera.X + mouse.x, Game.Camera.Y + mouse.y);
                Game.Camera.StopTweenPosition(ePauseTween);
              }
            }
            */
          } else {
            player.FaceLocation(Game.Camera.X + mouse.x, Game.Camera.Y + mouse.y);
          }
          //player.GoToStraight(Game.Camera.X + mouse.x, player.y);
          ClaimEvent();
        } else {
          if(letsScroll == 1)
          {
            CityScroll.stopDolly();
            CityScroll.Scroll();     
          } else if (letsScroll == 2)
          {        
            CityScroll.ScrollDiag();
          }
        }
      }
    }
  }
  
  
}

function moveParallaxObject(Object* theObject, int xPosition, float distance)
{
  theObject.X = (Room.Width - FloatToInt(IntToFloat(Game.Camera.X) / distance)) - xPosition;
}

function moveParalaxBuildingTest()
{
  if(Game.Camera.Y > 400)
  {
    moveParallaxObject(oParalax1, 1500, 5.0);
    //oParalax1.X =  (Room.Width - FloatToInt(IntToFloat(Game.Camera.X) / 5.0)) - 1500;
  }
}



function late_repeatedly_execute_always()
{
  moveParalaxBuildingTest();
  if(letsScroll)
  {
    CityScroll.dollyMove();
  }
}


function region3_WalksOnto()
{
  if(letsScroll == 1)
  {
    //SetTimerWithSeconds(12, 1.3);
    letsScroll = 0;
    allowWalk = true;
    Game.Camera.StopAllTweens(ePauseTween);
    Game.Camera.TweenX(0.8, 260, eEaseInOutSineTween, eNoBlock);
    player.Walk(464, 647, eNoBlock);    
    SetTimerWithSeconds(14, 0.8);
  }
  
}

function setDiagScrollOn()
{
  if(IsTimerExpired(14))
  {
    if(!letsScroll)
    {
      letsScroll = 2;         
    }
  }
}

function region3_WalksOff()
{
  prevReg = 3;
}

function region4_WalksOnto()
{
  if(prevReg == 3)
  {
    //if(!letsScroll)
   // {
      letsScroll = 1;
      SetTimerWithSeconds(12, 1.3);    
      Game.Camera.StopAllTweens(ePauseTween);
      Game.Camera.TweenX(1.3, player.x - 80, eEaseInOutSineTween, eNoBlock);
   // }
    
  } 
}

function dontShowIconsIfHigh()
{
  if(player.y < Game.Camera.Y + 70)
  {
    gIconbar.Visible = false;    
  } else {
    if(!gIconbar.Visible && !IsGamePaused())
    {
      gIconbar.Visible = true;
    }
  }
}

bool playerOnReg5 = false;

function konbiniDoorProcess()
{
  switch(oKonbiniDoor.SCABS())
  {
    case 0:
      
    break;
    case 10:
      oKonbiniDoor.Animate(0, 2, eOnce, eNoBlock, eForwards);
      oKonbiniDoor.SCABS(1);
    break;
    case 11:
      if(oKonbiniDoor.delay(3.0))
      {
        
        oKonbiniDoor.SCABS(1);
      }
    break;
    case 12:
      if(!playerOnReg5)
      {
        oKonbiniDoor.SCABS(1);
      }
    break;
    case 13:
    oKonbiniDoor.Animate(0, 2, eOnce, eNoBlock, eBackwards);
    oKonbiniDoor.SCABS(0);
    break;
  }
}


bool konbiniWalkable = false;
function allowWalkInKonbini()
{
  if(!konbiniWalkable && oKonbiniDoor.Frame > 7)
  {
    konbiniWalkable = true;
    RestoreWalkableArea(2);
  } else if (konbiniWalkable && oKonbiniDoor.Frame < 7)
  {
    konbiniWalkable = false;
    RemoveWalkableArea(2);
  }
}

function room_RepExec()
{
  allowWalkInKonbini();
  konbiniDoorProcess();
  
  dontShowIconsIfHigh();
  CityScroll.emergencyCenterPlayer();
  CityScroll.continueEdgeJump();
  if(letsScroll)
  {
    CityScroll.switchScrollBackOn();  
  }
  setDiagScrollOn();
  getScrolling();
}

function region4_WalksOff()
{
  prevReg = 4;
}

int roadRunCounter = 5;


function region5_WalksOnto()
{
  playerOnReg5 = true;
  
}

function region5_WalksOff()
{
  playerOnReg5 = false;
//oKonbiniDoor.Animate(0, 2, eOnce, eNoBlock, eBackwards);
}

function region5_Standing()
{
  if(player.Moving && oKonbiniDoor.Frame==0)
  {
    oKonbiniDoor.SCABS(10);
  }
}


