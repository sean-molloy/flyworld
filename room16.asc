//Yusan Lobby

/***************************Lift stuff********************************************************************/
bool liftIsArriving = false;
bool liftDoorsOpening = false;
bool liftDoorsOpen = false;
function setUpDoors()
{
  oLiftDoor.SetView(47, 0, 0);
  RemoveWalkableArea(2);
  
  oLiftLightup.SetView(48, 1, 0);
  oLiftLightup.Visible = false;
}

function liftDoorSound()
{
  aElevatorDoor.Play(eAudioPriorityHigh, eOnce);
}

function callLift()
{
  player.Walk(464, 119, eBlock);
  player.FaceDirection(eDirectionUp, eBlock);
  aLiftButton.Play(eAudioPriorityHigh, eOnce);
  if(oLiftDoor.Frame == 0)
  {
    oLiftLightup.Visible = true;
    oLiftLightup.Animate(1, 10, eOnce, eNoBlock, eForwards);
  }
  //push the button animation
  //light up arrow above lift  
  SetTimerWithSeconds(15, 3.0);
}

function openLiftDoors()
{
  oLiftLightup.Visible = false;
  liftDoorSound();
  oLiftDoor.Animate(0, 0, eOnce, eNoBlock, eForwards);
  SetTimerWithSeconds(15, 7.0);
  liftDoorsOpening = true;
}

function liftTruelyOpen()
{
  liftDoorsOpening = false;
  liftDoorsOpen = true;
  RestoreWalkableArea(2);
}

function liftArrival()
{  
  if(player.PreviousRoom == 15)
  {
    WaitSeconds(1.0);
    openLiftDoors();
  //  RestoreWalkableArea(2);
  //  SetTimerWithSeconds(17, 7.0);
  //  liftDoorsOpen = true;
  }
}

function closeLiftDoors()
{
  RemoveWalkableArea(2);
  liftDoorSound();
  oLiftDoor.Animate(0, 0, eOnce, eNoBlock, eBackwards);  
  liftDoorsOpen = false;
  if(liftIsArriving)
  {
    liftIsArriving = false;
  }
  if(inRect(516, 108, 531, 116))
  {    
    player.Walk(player.x, player.y+12, eBlock, eAnywhere);
  }
}

function listenLiftDoors()
{
   if(IsTimerExpired(15))
  {
    if(liftDoorsOpen)
    {
      closeLiftDoors();
    } else {
      openLiftDoors();
    }
  }
  
  if(liftDoorsOpening)
  {
    if(oLiftDoor.Frame == 18)
    {
      liftTruelyOpen();
    }
  }
  /*
  if(liftDoorsOpen)
  {
    if(IsTimerExpired(17))
    {
      closeLiftDoors();
    }
  } else {
    /* if(oLiftDoor.Frame == 18)
    {
      SetTimerWithSeconds(15, 5.0);
      liftDoorsOpen = true;
      RestoreWalkableArea(2);
    }*/
    
 // }
}

/**********************************Setting Up*************************************************************/
function room_Load()
{
  changePlayerLocaleOnRoomEnter();
  resumeMusicAfterCHCH(aOld_folks);
  if(player.PreviousRoom == 15)
  {
    player.PlaceOnWalkableArea();
    liftIsArriving = true;
    Game.Camera.SetAt(260, 0);
  } else {
    Game.Camera.SetAt(0, 0);
  }
  setUpDoors();
  if(characterChange)
  {
    characterChange = false;
  }
}

function room_AfterFadeIn()
{
  if(player.PreviousRoom == 15)
  {
    liftArrival();
  }
}

function room_RepExec()
{
  listenLiftDoors();
  
}

/***********************************************Scrolling stuff****************************************/
int wasHere = 0;

function region1_WalksOnto()
{
  if(wasHere ==2)
  {
    Game.Camera.TweenX(1.0, 0, eEaseInOutSineTween, eNoBlockTween);
    wasHere = 0;
  }
}

function region1_WalksOff()
{
  wasHere = 1;
}

function region2_WalksOnto()
{
  if(wasHere == 1)
  {
    Game.Camera.TweenX(1.0, 260, eEaseInOutSineTween, eNoBlockTween);
    wasHere = 0;
  }
}

function region2_WalksOff()
{
  wasHere = 2;
}
/***************************************Change Rooms***************************************************/



function region4_WalksOff()
{
  if(liftIsArriving)
  {
    liftIsArriving = false;
  }
}

function region4_Standing()
{
  if(!liftIsArriving)
  {
    if(oLiftDoor.Frame == 0)
    {
      WaitSeconds(0.6);
      player.ChangeRoom(15, player.x - 260, player.y + 70);   
    }
  }
}

/***************************************Interaction**********************************************/

function oLiftDoor_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(1, 1, "left", 2, 2); 
    //or
    player.Walk(1, 1);
  break;
  case 1://look
    player.FaceLocation(1, 1, eBlock);
    lookAbiPaul("", "");
  break;
  case 2://use
    noUsing();
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;

}

function hLiftCallButton_AnyClick()
{

switch (verbUsed)
{
  case 0: //walk
    walkToAndFace(464, 119, "up", 445, 130); 
    
  break;
  case 1://look
    player.FaceLocation(475, 111, eBlock);
    lookAbiPaul("lift button", "elevator button");
  break;
  case 2://use
    if(inRect(453, 110, 534, 126))
    {
      player.Walk(464, 119);
      player.FaceDirection(eDirectionUp);
      callLift();
    } else {
      tooFar();
    }
  break;
  case 3://talk
    noTalking();
  break;
  case 4://move
    noMoving();
  break;
  case 5://fourletters
    fuckAnyone();
  break;
  case 6://take
    cantTake();
  break;
  case 7://inv
    wontWork();
  break;
}
verbUsed = 0;

}


