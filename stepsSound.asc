// new module script

bool currentlyStepping = false;
int counter = 0;
int stepSpeed = 1;

static void FootSteps::playStep()
{
  
  switch(Random(5))
  {
    case 0:
      aStep1.Play(eAudioPriorityNormal, eOnce);
    break;
    case 1:
      aStep2.Play(eAudioPriorityNormal, eOnce);
    break;
    case 2:
      aStep3.Play(eAudioPriorityNormal, eOnce);
      
    break;
    case 3:
      aStep4.Play(eAudioPriorityNormal, eOnce);
    break;
    case 4:
      aStep5.Play(eAudioPriorityNormal, eOnce);
    break;
    case 5:
      aStep6.Play(eAudioPriorityNormal, eOnce);
    break;  
  }
}

function repStep()
{
  if(currentlyStepping)
  {
    counter++;
    if(counter == stepSpeed)
    {
      FootSteps.playStep();
      counter = 0;
    }
  }
}

static void FootSteps::start(int theSpeed)
{
  stepSpeed = theSpeed;
  FootSteps.playStep();
  currentlyStepping = true;
}

static void FootSteps::stop()
{
  //play scuff sound
  aStep1.Stop();
  aStep2.Stop();
  aStep3.Stop();
  aStep4.Stop();
  aStep5.Stop();
  aStep6.Stop();
  aScuff.Play(eAudioPriorityNormal, eOnce);
  counter = 0;
  currentlyStepping = false;
}

function repeatedly_execute_always()
{
  repStep();
}