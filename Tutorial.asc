// new module script
bool tutorialOn = true;
int theSCABS = 0;
//  true = haven't triggered this tutorial message yet.
bool howToWalk = true;

static bool Tutorial::IsTutorialOn()
{
  return tutorialOn;
}

static void Tutorial::ToggleTutorial()
{
  if(tutorialOn)
  {
    tutorialOn = false;
  } else {
    tutorialOn = true;
  }
}

static int Tutorial::SCABS(int num)
{  
  if(num == -1) //if default, just return current scabs
    { return theSCABS; 
  } else if (num == 1)  //if 1, increment
  { 
    theSCABS++;
  } else {
    theSCABS = num; //if another number, set to this number.
  }
  return theSCABS;
}


int delayClicker = 0;
static bool Tutorial::delay(float seconds)
{
  delayClicker++;  
  
  if(delayClicker > FloatToInt(seconds * 40.0)) //times 40 to make it a rough seconds delay thing, also make float
  {
    delayClicker = 0;    
    return true;
  } else {
    return false;
  }
}

function tutorialProcess()
{
  switch(Tutorial.SCABS())
  {
    case 0:
      if(howToWalk)
      {
        if(player.Room == 12)
        {
          if(RoomCounter.TimesEnteredRoom(12) < 2)
          {
            if(Tutorial.delay(2.0))
            {
              Tutorial.SCABS(20);
            }
          }
        }
      }
      
    break;
    case 20:
      howToWalk = false;
      gTutorial.BackgroundGraphic = 2440;
      gTutorial.Y = 150;
      gTutorial.X = 10;
      gTutorial.Transparency = 100;
      gTutorial.Visible = true;
      Tutorial.SCABS(1);
    break;
    case 21:
      gTutorial.TweenTransparency(0.7, 0, eEaseInOutSineTween, eNoBlockTween);
      gTutorial.TweenPosition(1.0, 220, 150, eEaseOutCircTween, eNoBlockTween);
      Tutorial.SCABS(1);
    break;
    case 22:
      if(gTutorial.X == 220 && (Tutorial.delay(4.0) || player.Room != 12))
      {
        Tutorial.SCABS(1);
      }
    break;
    case 23:
      gTutorial.TweenTransparency(1.0, 100, eEaseInOutSineTween, eNoBlockTween);
      Tutorial.SCABS(0);
    break;
    
  }
}

function isTutorialOn()
{
  if(tutorialOn && !IsGamePaused())
  {
    tutorialProcess();
  }
}

/***************************************GAME FUNCTIONS*********************************************/
function game_start()
{

}

function repeatedly_execute()
{
  isTutorialOn();
}






