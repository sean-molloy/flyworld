int prevX;
int prevY;
bool compOn = false;

function room_AfterFadeIn()
{


}

int prevMode;
int prevHint;

function rememberHint()
{
  for (int i = 0; i < gHintBar.ControlCount; i++)
  {
    if(gHintBar.Controls[i].Visible)
    {
      prevHint = i;
    }
  }
}

function fetchHint()
{
  if(mouse.Mode != eModeUseinv)
  {
    gHintBar.Controls[prevHint].Visible = true;
  }
}


function screenArrow()
{
  if(!gInventory.Visible)
  {
    if(compOn)
    {
      if(Hotspot.GetAtScreenXY(mouse.x, mouse.y)== hComputer)  
      {
        if(mouse.Mode != Computer.getCursor())
        {
          if(mouse.Mode != eModeonScreenA && mouse.Mode != eModeonScreenW && mouse.Mode != eModeonScreenG)
          {
            prevMode = mouse.Mode;
            
          }
        mouse.Mode = Computer.getCursor();
        rememberHint();
        wipeHintBar();
        }
        
      } else if(mouse.Mode == Computer.getCursor())
      {
       
        mouse.Mode = prevMode;
        fetchHint();
      }
    }
  }
}

function goBack()
{
  if(!gInventory.Visible)
  {
    if(Hotspot.GetAtScreenXY(mouse.x, mouse.y) == hExit)
    {
      if(mouse.x < 180)
      {
        if(mouse.Mode != eModeBackLeft)
        {
          prevMode = mouse.Mode;
          mouse.Mode = eModeBackLeft;
          rememberHint();
          wipeHintBar();
          
        }
      } else {
        if(mouse.Mode != eModeBackRight)
        {
          prevMode = mouse.Mode;
          mouse.Mode = eModeBackRight;
          rememberHint();
          wipeHintBar();
          
        }
      }
    } else if (mouse.Mode == eModeBackLeft || mouse.Mode == eModeBackRight)
    {
      mouse.Mode = prevMode;
      fetchHint();
    }
  }
}
function hExit_AnyClick()
{
player.ChangeRoom(player.PreviousRoom);
}
bool CompThere = true;
function room_Load()
{
  if(CompThere)
  {
    SetBackgroundFrame(0);
  }
  Time.FreezeTime();
  btnIconControls.Visible = false;
  prevX = player.x;
  prevY = player.y;
  player.x = 180;
  player.y = 460;
  player.Transparency = 100;
  if(paulAwake)
  {
    btnChch.Visible = false;
  }
  btnIconWalk.Visible = false;
}

function room_Unload()
{
  player.place( prevX, prevY);
  Time.FreezeTime(true);
btnIconControls.Visible = true;
  mouse.Mode = eModeWalkto;
  aBaronTitle1.Stop();
  player.Transparency = 0;
   if(paulAwake)
  {
    btnChch.Visible = true;
  }
  btnIconWalk.Visible = true;
}


function hidePopUpMenu()
{
  if(gPopUpComp.Visible)
  {
    if(GUI.GetAtScreenXY(mouse.x, mouse.y)!= gPopUpComp)
    {
      gPopUpComp.Visible = false;
    }
  }
}

function room_RepExec()
{
goBack();
screenArrow();
hidePopUpMenu();
Computer.ComputerProcess();
}

function oKeys_AnyClick()
{
  player.y = 150;
  switch (verbUsed)
  {
    case 0: //walk
      lookAbiPaul("It's my house keys!", 
                  "It's some keys.");
    break;
    case 1://look
      
      lookAbiPaul("It's my house keys!", 
                  "It's some keys.");
    break;
    case 2://use
      Canned.noUsing();
    break;
    case 3://talk
      Canned.noTalking();
    break;
    case 4://move
      Canned.noMoving();
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
       player.place(mouse.x, mouse.y);
       player.AddInventory(iHouseKeys);
       oKeys.Visible = false;
       displayAlert(eAlertInvPickup, false, iHouseKeys);
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;
 player.x = 180;
  player.y = 460;
  
  

}

function seeIcon(Object* theIcon)
{
  theIcon.Baseline = 199;
  theIcon.Visible = true;
  theIcon.Transparency = 30;
}

function hideIcon(Object* theIcon)
{
  theIcon.TweenFadeOut(0.7, eEaseInBackTween, eNoBlock);
}

function hideIcons()
{
  hideIcon(oIconBaron);
  hideIcon(oIconBin);
  hideIcon(oIconPC);
  hideIcon(oIconPro);
}

function seeIcons()
{
  Wait(5);
  seeIcon(oIconBaron);
  seeIcon(oIconBin);
  seeIcon(oIconPC);
  seeIcon(oIconPro);
}
function deselectAll()
{
  oIconBaron.Graphic = 490;
  oIconBin.Graphic = 496;
  oIconPC.Graphic = 492;
  oIconPro.Graphic = 494;
  Computer.setSelect(0);
}


function turnOnComputer()
{
  oOnButton.toggleVerbOnOff();
  if(compOn)
  {
    
    oOnButton.SetView(197, 0);
    oOnButton.Animate(0, 2, eOnce, eNoBlock, eForwards);           
    Computer.SCABS(10);    
    hComputer.SetTextProperty("defaultVerb", "look");
    compOn = false;
  } else {
    
    deselectAll();    
    oOnButton.SetView(197, 0);
    oOnButton.Animate(0, 2, eOnce, eNoBlock, eForwards);               
    hComputer.SetTextProperty("defaultVerb", "none");
    compOn = true;
    Computer.SCABS(50);
  }
}
function oOnButton_AnyClick()
{
  player.y = 150;
  switch (verbUsed)
  {
    case 0: //walk
      turnOnComputer();
    break;
    case 1://look
     
      lookAbiPaul("It's the on button.", "I don't know... It's a button.");
    break;
    case 2://use
      turnOnComputer();
    break;
    case 3://talk
      Canned.noTalking();
    break;
    case 4://move
      turnOnComputer();
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
      Canned.cantTake();
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;
   player.x = 180;
  player.y = 460;
}

function oComputerScreen_AnyClick()
{
  //aClick1.Play(eAudioPriorityHigh);
  aMouseClick1.Play(eAudioPriorityHigh);
  
}
//this int will need global scope to access from GUI

function selectIcon(Object* theIcon)
{
  oIconBaron.Graphic = 490;
  oIconBin.Graphic = 496;
  oIconPC.Graphic = 492;
  oIconPro.Graphic = 494;
  theIcon.Graphic = theIcon.Graphic + 1;
  Computer.setSelect(theIcon.ID);
  
}


function loadBaron()
{
  if(DoubleClick.Event[eMouseLeft])
  {
    
    Computer.playBaron();
  }
}

function loadPC()
{
  if(DoubleClick.Event[eMouseLeft])
  {
    
  }
  
}

function loadPro()
{
  if(DoubleClick.Event[eMouseLeft])
  {
    
  }
}

function loadBin()
{
  if(DoubleClick.Event[eMouseLeft])
  {
    
  }
}

function popMenu()
{
  
    if(mouse.x > 250)
    {
      gPopUpComp.X = mouse.x - 15;
    } else {
    gPopUpComp.X = mouse.x;
    }
    if(mouse.y > 122)
    {
       gPopUpComp.Y = mouse.y - 15;
    } else 
    {
      gPopUpComp.Y = mouse.y;
    }
    gPopUpComp.Visible = true;
  
}

function on_mouse_click(MouseButton button)
{
  
  if(compOn)
  {
    if(mouse.Mode == eModeonScreenA)
    {
      if(Object.GetAtRoomXY(mouse.x, mouse.y) == oIconBaron)
      {
        selectIcon(oIconBaron);
        if(button == eMouseRight)
        {
          aMouseClick1.Play(eAudioPriorityHigh);
          popMenu();
        } else {
          aMouseClick1.Play(eAudioPriorityHigh);
          loadBaron();
        }
        
        ClaimEvent();
      } else if(Object.GetAtRoomXY(mouse.x, mouse.y) == oIconBin)
      {
        selectIcon(oIconBin);
        if(button == eMouseRight)
        {
          popMenu();
        } else {
          loadBin();
        }
        aMouseClick1.Play(eAudioPriorityHigh);
        ClaimEvent();
      }else if(Object.GetAtRoomXY(mouse.x, mouse.y) == oIconPC)
      {
        selectIcon(oIconPC);
        if(button == eMouseRight)
        {
         popMenu();
        } else {
          loadPC();
        }
        aMouseClick1.Play(eAudioPriorityHigh);
        ClaimEvent();
      }else if(Object.GetAtRoomXY(mouse.x, mouse.y) == oIconPro)
      {
         selectIcon(oIconPro);
        if(button == eMouseRight)
        {
         popMenu();
        } else {
          loadPro();
        }
        aMouseClick1.Play(eAudioPriorityHigh);
         ClaimEvent();
      } else if(Hotspot.GetAtScreenXY(mouse.x, mouse.y)== hComputer) 
      {
        deselectAll();
        if(button == eMouseRight)
        {
          popMenu();
        }
        aMouseClick1.Play(eAudioPriorityHigh);
        ClaimEvent();
      }
    } else if (mouse.Mode ==  eModeonScreenG)
    {
      if(cFriedrich.Room == eRooms_Omni_Computer && !IsGamePaused())
      {
        if(Object.GetAtRoomXY(mouse.x, mouse.y) == oBaronComp)
        {
            cFriedrich.StopMoving();
            Computer.setCursor(eModeonScreenW);
            cFriedrich.Walk(201, 131);
            Computer.SCABS(240);
        } else {
          cFriedrich.Walk(mouse.x, mouse.y);
          aMouseClick1.Play(eAudioPriorityHigh);
          ClaimEvent();
        }
      }
    }
  } 
}
//extract meny logic so you can run it from highlighting ones


function oIconPC_AnyClick()
{

  
}

function oIconPro_AnyClick()
{
  Display("Here");
 
}

function oIconBaron_AnyClick()
{
  
}

function oIconBin_AnyClick()
{
  
}

function hComputer_AnyClick()
{
  if(!compOn)
  {
    player.y = 150;
    switch (verbUsed)
    {
      
      case 0: //walk
        lookAbiPaul("The computer is off.", "I think it's broken.");
      break;
      case 1://look
        
        lookAbiPaul("The computer is off.", "I think it's broken.");
      break;
      case 2://use
        lookAbiPaul("I gotta turn it on first!", "I think it's broken.");
      break;
      case 3://talk
        Canned.noTalking();
      break;
      case 4://move
        Canned.noMoving();
      break;
      case 5://fourletters
        Canned.fuckAnyone();
      break;
      case 6://take
        Canned.cantTake();
      break;
      case 7://inv
        Canned.wontWork();
      break;
    }
    verbUsed = 0;
  }
}
