// room script file
//note, when another room leads to the map, you must run Find.findScreenPosMap();
//this tells the map where to zoom out from!

/*
  current issues with the map: no icon bar but can still run menu functions with keys
  this is probably fine. 
  should be able to read your beeper when walking around?
  
  suburbs
  Leaky Lambert, Albion Rise,  Spaghetti Disfunction, Landsbank, Elizabeth's Pa, Ye Nanana.
  
  show name of current neighbourhood.
  could, if you want, expand this to show a label for each locale you enter? GTA san andreas style
  if you want the same kind of font use 8 out of the sci font pack
  could be doable, there won't be that many locales, right?
  prerender the background graphic with the name of the neighbourhood, then you can tween transparency of the gui.
*/

/***********************Map Labels**********************************************/

String theFlatLabel; //these strings can be changed, like the address can be changed to something more descriptive

String theMapLabel; //changes dynamically

function initStrings(){
  //runs on first load, initialising all string variables. 
  //these are dynamically rendered later. You can change these whenever you want to make them more descriptive.
  theFlatLabel = "18 Copeland Street";
}

function HovermapLabels()
{ //displays and hides the map label
   if(GetLocationType(mouse.x, mouse.y) == eLocationHotspot)
  {
    if(theMapLabel!=null)
    {
      bMapLocation.Text = theMapLabel;
    }
    gMapLabel.X = mouse.x - 60;
    gMapLabel.Y = mouse.y + 10;
    gMapLabel.Visible = true;
  } else {
    gMapLabel.Visible = false;
    theMapLabel = "";
  }  
}

function suburbName(int whichSuburb)
{  
  switch(whichSuburb)
  {
    case 1:
    gSuburb.BackgroundGraphic = 1090; //leaky lambert
    
    break;   
    case 2:
    gSuburb.BackgroundGraphic = 1095; //Newton Gully
    
    break;
    case 3:
    gSuburb.BackgroundGraphic = 1092; //elizabeth's pa
    
    break;
    case 4:
    gSuburb.BackgroundGraphic = 1089; //albion rise
    break;
    case 5:
    gSuburb.BackgroundGraphic = 1091; //landsbark
    
    //gSuburb.BackgroundGraphic = 1093;//spaghetti disfunction
    break;
    case 6:
    gSuburb.BackgroundGraphic = 1094; //ye nanana
    break;
   break;
  }
  gSuburb.Visible=true;
  gSuburb.Transparency = 100;
  gSuburb.TweenTransparency(1.0, 0, eEaseOutSineTween, eNoBlockTween);
  SetTimerWithSeconds(1, 2.0);
}

//all hotspots need a hover event which changes the label to a string, or a string variable if you want to change it later.
function hHotspot1_MouseMove()
{
  theMapLabel = theFlatLabel;
}

function room_FirstLoad()
{
  initStrings();
}
/**********************Panning Stuff*********************************/
int wasHere = 0;
function panToOne()
{
  Game.Camera.TweenPosition(1.0, 0, 0, eEaseInOutSineTween);  
  suburbName(1);
}
function panToTwo()
{
  Game.Camera.TweenPosition(1.0, 340, 0, eEaseInOutSineTween, eBlockTween);  
  suburbName(2);
}
function panToThree()
{
  Game.Camera.TweenPosition(1.0, 680, 0, eEaseInOutSineTween);
  suburbName(3);
}
function panToFour()
{
  Game.Camera.TweenPosition(1.0, 0, 180, eEaseInOutSineTween);
  suburbName(4);
}
function panToFive()
{
  Game.Camera.TweenPosition(1.0, 340, 180, eEaseInOutSineTween);
  suburbName(5);
}
function panToSix()
{
  Game.Camera.TweenPosition(1.0, 680, 180, eEaseInOutSineTween);
  suburbName(6);
}
function region1_WalksOnto()
{
  if(wasHere == 2)
  {
    panToOne();
    wasHere = 0;
  }
}
function region2_WalksOnto()
{
    if(wasHere == 1)
  {
    panToFour();
    wasHere = 0;
  }
}
function region3_WalksOnto()
{
    if(wasHere == 4)
  {
    panToOne();    
    wasHere = 0;
  }
}
function region4_WalksOnto()
{
  if(wasHere == 3)
  {
    panToTwo();
    wasHere = 0;
  }
}
function region5_WalksOnto()
{
  if(wasHere == 6)
  {
    panToTwo();    
    wasHere = 0;
  }
}
function region6_WalksOnto()
{
  if(wasHere == 5)
  {
    panToFive();
    wasHere = 0;
  }
}
function region7_WalksOnto()
{
  if(wasHere == 8)
  {
    panToTwo();    
    wasHere = 0;
  }
}
function region8_WalksOnto()
{
  if(wasHere == 7)
  {
    panToThree();
    wasHere = 0;
  }
}
function region9_WalksOnto()
{
  if(wasHere == 10)
  {
    panToFour();    
    wasHere = 0;
  }
}
function region10_WalksOnto()
{
  if(wasHere == 9)
  {
    panToFive();    
    wasHere = 0;
  }
}
function region11_WalksOnto()
{
  if(wasHere == 12)
  {
    panToFive();    
    wasHere = 0;
  }
}
function region12_WalksOnto()
{
  if(wasHere == 11)
  {
    panToSix();    
    wasHere = 0;
  }
}
function region1_WalksOff()
{
  wasHere = 1;
}
function region2_WalksOff()
{
  wasHere = 2;
}
function region3_WalksOff()
{
  wasHere = 3;
}
function region4_WalksOff()
{
  wasHere = 4;
}
function region5_WalksOff()
{
  wasHere = 5;
}
function region6_WalksOff()
{
  wasHere = 6;
}
function region7_WalksOff()
{
  wasHere = 7;
}
function region8_WalksOff()
{
  wasHere = 8;
}
function region9_WalksOff()
{
  wasHere = 9;
}
function region10_WalksOff()
{
  wasHere = 10;
}
function region11_WalksOff()
{
  wasHere = 11;
}
function region12_WalksOff()
{
  wasHere = 12;
}

function room_Load()
{
  changePlayerLocaleOnRoomEnter();
  player.Clickable = false;
  gIconbar.Visible = false;
  
  if(theFlatLabel != null)
  {
    if(theFlatLabel != "The Flat")
    {
      if(player.PreviousRoom == eRooms_FlatExterior)
      {
        theFlatLabel = "The Flat";
      }
    }
  }
 
  Game.Camera.SetSize(13, 10);
  Game.Camera.SetAt(player.x - mapScreenPosX, player.y - mapScreenPosY);

}

function switchToMapView(){
  if(IsPlayerAbi)
  {
    player.ChangeView(36);
    player.SpeechView = 36;
    player.SetIdleView(36, 0);   
  } else {
    player.ChangeView(35);
    player.SpeechView = 35;
    player.SetIdleView(35, 0);    
  }
  SetAreaScaling(1, 100, 100);
}


function room_AfterFadeIn()
{
 
  Game.Camera.TweenSize(1.6, 360, 200, eEaseOutBackTween, eNoBlockTween);
  if(player.PreviousRoom == eRooms_FlatExterior)
  {   
    Game.Camera.TweenPosition(1.6, 340, 0, eEaseOutBackTween, eBlockTween);    
  }
  switchToMapView();
   
  
}
function hHotspot1_AnyClick()
{
  player.Walk(429, 146, eNoBlock);
}



function room_RepExec()
{
 HovermapLabels();
 
 if(IsTimerExpired(1))
 {
   if(gSuburb.Transparency == 0)
   {
     gSuburb.TweenTransparency(1.0, 100, eEaseInSineTween, eNoBlockTween);
   }
 }
}

function room_Leave()
{
  gSuburb.Visible = false;
  player.Clickable = true;  
}




function region13_WalksOnto()
{
  SetAreaScaling(1, 5, 5);
  if(IsPlayerAbi)
  {
    abiNormal();
  } else {
    paulJumper(); 
  }
//  player.StopMoving();
  SetNextScreenTransition(eTransitionInstant);    
  //Game.Camera.AutoTracking = true; 
  Game.Camera.TweenPosition(0.7,  425, 138, eEaseInSineTween, eNoBlockTween);
  Game.Camera.TweenSize(0.7, 13, 10, eEaseInSineTween, eBlockTween);
  player.ChangeRoom(eRooms_FlatExterior, 130,  483);
}
