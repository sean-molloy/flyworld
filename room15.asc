//lift script;


bool liftInMotion;


function changeRoomFromLift(Character* theChar, int theRoom)
{
  int x, y;
  
  if(theRoom == eRooms_Omni_CorridorRight)
  {
    x = 478;
    y = 40;
    theChar.ChangeRoom(theRoom, theChar.x + x, theChar.y - y);
  } else if (theRoom == eRooms_Omni_Lobby)
  {
    x = 276;
    y = 101;
    theChar.ChangeRoom(theRoom, x, y);
  }    
}

function npcChangeRoomFromLift(Character* theChar, int theRoom)
{
  if(theChar.Room == eRooms_Omni_Lift)
  {
    changeRoomFromLift(theChar, theRoom);
  }  
}

function openDoors()
{  
  if(player.PreviousRoom == eRooms_Omni_CorridorRight)
  {
    changeRoomFromLift(player, eRooms_Omni_Lobby);     
    npcChangeRoomFromLift(cJohn, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cHamish, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cBob, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cFred, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cSally, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cMatt, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cFrank, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cDennis, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cKirsty, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cGina, eRooms_Omni_Lobby);          
    npcChangeRoomFromLift(cClaudia, eRooms_Omni_Lobby);          
           
    //get out at ground level
  } else {
    
    Employees_Omni.putCharsInPlace();
    changeRoomFromLift(player, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cJohn, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cHamish, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cFred, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cBob, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cSally, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cMatt, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cFrank, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cDennis, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cKirsty, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cGina, eRooms_Omni_CorridorRight);        
    npcChangeRoomFromLift(cClaudia, eRooms_Omni_CorridorRight);        
  }
}


function elevatorMovement()
{
  switch(oLiftShaft.SCABS())
  {
    case 0: 
    break;
    
    case 9:
      if(oLiftShaft.delay(1.2))
      {
        oLiftShaft.SCABS(1);
      }
    break;
    case 10:
      StartCutscene(eSkipESCOnly);
      aElevatorfall1.Play(eAudioPriorityHigh, eOnce);
      oLiftShaft.TweenPosition(10.0, 225, 200, eEaseInOutSineTween, eNoBlockTween);
      Game.Camera.TweenY(7.0, 0, eEaseInCircTween, eNoBlockTween);
      oLiftShaft.SCABS(1);
    break;
    case 11:
      if(Game.Camera.Y== 0)
      {
        Game.Camera.TweenY(3.0, 70, eEaseOutBounceTween, eNoBlockTween);
        oLiftShaft.SCABS(1);
      }
    break;
    case 12:
      if(Game.Camera.Y == 70 && oLiftShaft.Y == 200)
      {
        oLiftShaft.SCABS(1);
      }
    break;
    case 13:
      aClomp.Play(eAudioPriorityHigh, eOnce);
      TweenShakeScreen(0.2, 5, 5, 5, 5, eEaseInCircTween, eBlockTween);
      oLiftShaft.SCABS(1);
    break;
    case 14:
      if(oLiftShaft.delay(0.1))
      {
        oLiftShaft.SCABS(1);
      }
    break;
    case 15:      
      openDoors();
      oLiftShaft.SCABS(0);
    break;
    
    
    case 49:
      if(oLiftShaft.delay(1.2))
      {
        oLiftShaft.SCABS(1);
      }
    break;
    case 50:
      StartCutscene(eSkipESCOnly);
      aElevatorfall1.Play(eAudioPriorityHigh, eOnce);
      oLiftShaft.TweenPosition(10.0, 225, 1906, eEaseInOutSineTween, eNoBlockTween);
      Game.Camera.TweenY(10.0, 40, eEaseInOutCircTween, eNoBlockTween);
      oLiftShaft.SCABS(1);
    break;
    case 51:
      if(oLiftShaft.Y == 1906 && Game.Camera.Y == 40)
      {
        aClomp.Play(eAudioPriorityHigh, eOnce);
        TweenShakeScreen(0.2, 5, 5, 5, 5, eEaseInCircTween, eBlockTween);
        oLiftShaft.SCABS(1);
      }
    break;
    case 52:
      if(oLiftShaft.delay(0.1))
      {
        oLiftShaft.SCABS(1);
      }
    break;
    case 53:
      openDoors();
      oLiftShaft.SCABS(0);
    break;
  }
}
 


function room_Load()
{
  Time.FreezeTime();
  changePlayerLocaleOnRoomEnter();
  player.PlaceOnWalkableArea();
  liftInMotion = false;
  if(player.PreviousRoom == eRooms_Omni_CorridorRight)
  {
    Game.Camera.SetAt(0, 40);
  } else {
    Game.Camera.SetAt(0, 70);
  }
  if(characterChange)
  {
    characterChange = false;
  }
}

function room_AfterFadeIn()
{
  if(paulAwake)
  {
    btnChch.Visible = false;
  }
}
  
function room_Leave()
{
  Time.FreezeTime(false);
  if(paulAwake)
  {
    btnChch.Visible = true;
  }
}

/**********************custom functions****************************************************/




float liftTime = 10.0;
bool goingDownNotUp;



function pushLiftButton()
{
  //animate char pushing button
  aLiftButton.Play(eAudioPriorityHigh, eOnce);  
  if(!liftInMotion)
  {
    liftInMotion = true;
    if(player.PreviousRoom == eRooms_Omni_CorridorRight)
    {
      oLiftShaft.SCABS(9);
      
    } else {
      oLiftShaft.SCABS(49);
    }   
  }
}


function room_RepExec()
{
  elevatorMovement();
 /*
  if(IsTimerExpired(16))
  {
    if(goingDownNotUp)
    {
      Game.Camera.TweenY(3.0, 70, eEaseOutBounceTween, eNoBlockTween);
    } 
  }
  
  if(IsTimerExpired(17))
  {
    openDoors();
  }*/
  
  
}



/**************************Interaction*******************************************************/

function hLiftButton_AnyClick()
{

  switch (verbUsed)
  {
    case 0: //walk
      walkToAndFace(248, 173, eDirectionLeft, 260, 174); 
    break;
    case 1://look
      player.FaceLocation(240, 176, eBlock);
      lookAbiPaul("It's the controls for the lift.", "The elevator's buttons.");
    break;
    case 2://use
      pushLiftButton();
    break;
    case 3://talk
      Canned.noTalking();
    break;
    case 4://move
      pushLiftButton();
    break;
    case 5://fourletters
      Canned.fuckAnyone();
    break;
    case 6://take
      Canned.cantTake();
    break;
    case 7://inv
      Canned.wontWork();
    break;
  }
  verbUsed = 0;

}


