// room script file
int currentPhoneme = 0;
bool blinkingAllowed = true;

function room_Load()
{
  oBrows.SetView(207, 0, 0);
  
  oBlink.Visible = false;
  cGhostl.ChangeRoom(305);
  cGhostl.Transparency = 100;
  cGhostl.SpeechColor = cJohnsMouth.SpeechColor;
  cGhostl.SpeechView = cJohnsMouth.SpeechView;
  oSideEyes.SetView(36, 0, 0);
  oCockBrow.SetView(209, 0, 0);
}

int counter = 0;

int dryEyes = 50;
function abiBlink()
{
  if(blinkingAllowed)
  {
  
  counter++;
  if(counter == dryEyes)
  {
    oBlink.Visible = true;
    
  } else if (counter == dryEyes + 8)
  {
    oBlink.Visible = false;
    dryEyes = 50 + Random(100);
    counter = 0;
  }
  }
}

function fastSideEyes()
{
  oSideEyes.Visible = true;
  oSideEyes.Animate(0, 0, eOnce, eBlock, eForwards);
  oSideEyes.Animate(0, 0, eOnce, eBlock, eBackwards);
}

function sideEyeOn()
{
  if(currentPhoneme == 1)
  {
    oSideEyes.Visible = true;
    oSideEyes.Animate(0, 0, eOnce, eNoBlock, eForwards);
    
  }
}

function sideEyeOff()
{
  if(currentPhoneme == 2)
  {
    oSideEyes.Animate(0, 0, eOnce, eNoBlock, eBackwards);
  }
}

function getAngry()
{
  if(currentPhoneme == 3)
  {
    
    oAnnoyedFace.Visible = true;
    
  }
}

function abiRelax()
{
  if(currentPhoneme == 4)
  {
    oAnnoyedFace.Visible = false;
  }
}

function toggleCockBrow()
{
  if(currentPhoneme == 5)
  {
    if(oCockBrow.Frame == 0)
    {
      oCockBrow.Animate(0, 1, eOnce, eNoBlock, eForwards);
    } else {
      oCockBrow.Animate(0, 1, eOnce, eNoBlock, eBackwards);
    }
  }
}

function raiseBrows()
{
  if(currentPhoneme == 6)
  {
    oBrows.Animate(0, 0, eOnce, eNoBlock, eForwards);
  }
}

function lowerBrows()
{
  if(currentPhoneme == 7)
  {
    oBrows.Animate(0, 0, eOnce, eNoBlock, eBackwards);
  }  
}

//bool squinting = false;

function squintOn()
{
  if(currentPhoneme == 8)
  {
    oSquint.Visible = true;
  }
}

function squintOff()
{
  if(currentPhoneme == 9)
  {
    oSquint.Visible = false;
  }
}

function johnSays(String heSays)
{
  cGhostl.SayAtSync(260, 60, 100,  heSays);
}
function abiSays(String sheSays)
{  
  cAbiCloseSpeech.SayAtSync(30, 40, 300, sheSays);
}

function room_AfterFadeIn()
{
  
  switch(cutSceneShot)
  {
    case 1:        

      abiSays("&1 No...");      
      abiSays("&2 ...Just checking.");    
    break;
    case 3:
   
      abiSays("&3 What did you trying to say?");      
    break;
    
    case 4:
      
      WaitSeconds(0.4);
      blinkingAllowed=false;
      fastSideEyes();
      WaitSeconds(0.3);
      blinkingAllowed=true;
      
      
    break;
    case 7:
    
    
    johnSays("&9 Um, there's been a few complaints about you.");
    
     abiSays("&5 That's outrageous!");
    blinkingAllowed = false;
     abiSays("&6 Who's complaining about me?");
     abiSays("&7 Is it Fiona?");
     blinkingAllowed = true;
     abiSays("&8 Fiona is a liar.");
     
     cJohn.SayAt(260, 60, 100, "&10 Look.");
     cJohn.SayAt(260, 60, 100, "&11 Whoever it was,");
    break;
    case 9:
      abiSays("&9 You respect that kind of cowardice?");
    break;
    case 11:
     
      abiSays("&10 What?!");
      
     abiSays("&11 No,");
     
     abiSays("&12 shut up!");
    break;
    case 13:
      abiSays("&13 This is vintage.");
    break;
    case 15:
    blinkingAllowed = false;
     abiSays("&14 In future, I'll aim for");
    
     abiSays("&15 'extremely hilarious.'");
     
     blinkingAllowed = true;
    break;
    case 17:
    
      abiSays("&16 The prophecy.");
    break;
    case 19:
    
     abiSays("&17 (mumble)");
    break;
    case 21:
    
      abiSays("&18 And you're just going to do whatever a box of birds tells you to do.");
    break;
    case 23:
      
      abiSays("&19 I'm quitting?");
    break;
    case 25:
    WaitSeconds(0.5);
    
    WaitSeconds(0.2);
    blinkingAllowed = false;
    abiSays("&20 Woah woah woah,");
    blinkingAllowed = true;
    abiSays("&21 that was a question, not a statement!");
    break;
  }
  
   cutSceneShot++;
   if(cutSceneShot < 25)
   {
    if(cutSceneShot == 5)
    {
      player.ChangeRoom(309);
    } else {
      player.ChangeRoom(304);
    }
   } else {
     if(Game.InSkippableCutscene)
     {
      EndCutscene();
     }
     cutSceneShot = 0;
     Speech.SkipStyle = eSkipKeyMouseTime;
     player.ChangeRoom(eRooms_Omni_CorridorLeft);
   }
 
}

function room_Leave()
{

}

function getPhonemeStressNum()
{ 
  if(TotalLipSync.GetCurrentPhoneme()!= null)
  {
    String theString = TotalLipSync.GetCurrentPhoneme();
    if(theString.EndsWith("1"))
    {
      currentPhoneme = 1;
    } else if (theString.EndsWith("2"))
    {
      currentPhoneme = 2;
    } else if(theString.EndsWith("3"))
    {
      currentPhoneme = 3;
    } else if(theString.EndsWith("4"))
    {
      currentPhoneme = 4;
    } else if(theString.EndsWith("5"))
    {
      currentPhoneme = 5;
    } else if (theString.EndsWith("6"))
    {
      currentPhoneme = 6;
    } else if (theString.EndsWith("7"))
    {
      currentPhoneme = 7;
    } else if (theString.EndsWith("8"))
    {
      currentPhoneme = 8;
    } else if (theString.EndsWith("9"))
    {
      currentPhoneme = 9;
    } else if (theString.EndsWith("!"))
    {
      currentPhoneme = 10;
    } else
    {
      currentPhoneme = 0;
    }
  } else {
    currentPhoneme = 0;
  }
}

function room_RepExec()
{

}

function late_repeatedly_execute_always()
{
  getPhonemeStressNum();
  sideEyeOn();
  sideEyeOff();
  getAngry();
  abiRelax();
  abiBlink();
  raiseBrows();
  lowerBrows();
  squintOn();
  squintOff();
  toggleCockBrow();
 /* timerGetAngry();
  timerStopBeingAngry();
  turnOffSideEyes();
  turnOnSideEyes();
  turnOnQuickSideEye();
  */
  
}