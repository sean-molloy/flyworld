// room script file
int wasHere = 0;

function findCameraPositionAfterCharacterSwitch()
{
  switch (findPlayer())
  {
    case 1:
      Game.Camera.SetAt(0, 0);
    break;
    case 2:
      Game.Camera.SetAt(250, 0);
    break;
    default:
      Game.Camera.SetAt(0, 0);
    break;
  }
}


function findCameraPosition()
{
  if(player.PreviousRoom == 11)
  {
    Game.Camera.SetAt(250, 0);
   // player.x = player.x + 250;
  } else if (player.PreviousRoom == 13)
  {
    Game.Camera.SetAt(556, 0);
  } else 
  {
    findCameraPositionAfterCharacterSwitch();
  }
}


function room_Load()
{
  resumeMusicAfterCHCH(aEndlessOffice);
  changePlayerLocaleOnRoomEnter();
  if(characterChange)
  {
    characterChange = false;   
    
  }  
  findCameraPosition();
  player.PlaceOnWalkableArea();
}

function room_AfterFadeIn()
{
  if(player.PreviousRoom == 13)
  {
    Game.Camera.TweenX(1.0, 250, eEaseInOutSineTween, eNoBlockTween);
    player.Walk(454, player.y, eNoBlock);
  } else if (player.PreviousRoom == 11)
  {
    player.Walk(player.x, 173, eNoBlock);
  }
  
}


/****************************Scrolling stuff*****************************************/
function region1_WalksOff()
{
  wasHere = 1;
}

function region1_WalksOnto()
{
  if(wasHere == 2)
  {
    Game.Camera.TweenX(1.0, 0, eEaseInOutSineTween, eNoBlockTween);
    wasHere = 0;
  }
}

function region2_WalksOff()
{
  wasHere = 2;
}

function region2_WalksOnto()
{
  if(wasHere == 1)
  {
    Game.Camera.TweenX(1.0, 250, eEaseInOutSineTween, eNoBlockTween);
    wasHere = 0;
  }
}



/********************Change Rooms*****************************************************************/

function region3_WalksOnto()
{
  player.ChangeRoom(11, player.x - 250, player.y);
}

function region4_WalksOnto()
{
  player.ChangeRoom(13, player.x - 250, player.y);
}

